[gd_scene load_steps=44 format=2]

[ext_resource path="res://Assets/Sprites/UI/crosshairs/gun_ch.png" type="Texture" id=1]
[ext_resource path="res://Assets/Sprites/compass_center.svg" type="Texture" id=2]
[ext_resource path="res://base font.tres" type="DynamicFont" id=3]
[ext_resource path="res://Scripts/UI/ProceduralShape.gd" type="Script" id=4]
[ext_resource path="res://Assets/Fonts/Prompt/Prompt-SemiBold.ttf" type="DynamicFontData" id=5]
[ext_resource path="res://Scenes/UI/Weapon Slot.tscn" type="PackedScene" id=6]
[ext_resource path="res://Assets/Sprites/compass.svg" type="Texture" id=7]
[ext_resource path="res://Assets/Fonts/Default Font.ttf" type="DynamicFontData" id=8]
[ext_resource path="res://addons/quentincaffeino/console/assets/fonts/source-code-pro/OTF/SourceCodePro-Medium.otf" type="DynamicFontData" id=9]

[sub_resource type="DynamicFont" id=8]
size = 48
use_filter = true
font_data = ExtResource( 5 )

[sub_resource type="StyleBoxFlat" id=7]
bg_color = Color( 0.117647, 0.117647, 0.117647, 1 )
border_width_left = 2
border_width_top = 2
border_width_right = 2
border_width_bottom = 2
corner_radius_top_left = 5
corner_radius_top_right = 5
corner_radius_bottom_right = 5
corner_radius_bottom_left = 5
expand_margin_left = 5.0
expand_margin_right = 5.0
expand_margin_top = 5.0
expand_margin_bottom = 5.0

[sub_resource type="StyleBoxFlat" id=5]
bg_color = Color( 0.329412, 0.329412, 0.329412, 1 )
corner_radius_top_left = 5
corner_radius_top_right = 5
corner_radius_bottom_right = 5
corner_radius_bottom_left = 5
expand_margin_left = 5.0
expand_margin_right = 5.0
expand_margin_top = 5.0
expand_margin_bottom = 5.0
shadow_color = Color( 0.3264, 0.96, 0.62208, 0.560784 )
shadow_size = 6

[sub_resource type="StyleBoxFlat" id=4]
bg_color = Color( 0.117647, 0.117647, 0.117647, 1 )
expand_margin_left = 5.0
expand_margin_right = 5.0
expand_margin_top = 5.0
expand_margin_bottom = 5.0
shadow_color = Color( 0.1617, 0.77, 0.445573, 0.560784 )
shadow_size = 4

[sub_resource type="StyleBoxEmpty" id=9]

[sub_resource type="StyleBoxFlat" id=2]
bg_color = Color( 0, 0, 0, 0.290196 )

[sub_resource type="StyleBoxFlat" id=10]
corner_radius_top_left = 4
corner_radius_top_right = 4
corner_radius_bottom_right = 4
corner_radius_bottom_left = 4
expand_margin_left = 5.0
expand_margin_right = 5.0

[sub_resource type="Theme" id=11]
default_font = ExtResource( 3 )
Button/fonts/font = SubResource( 8 )
Button/styles/focus = SubResource( 7 )
Button/styles/hover = SubResource( 5 )
Button/styles/normal = SubResource( 4 )
Button/styles/pressed = SubResource( 7 )
CheckBox/styles/focus = SubResource( 9 )
CheckBox/styles/hover = SubResource( 9 )
CheckBox/styles/hover_pressed = SubResource( 9 )
CheckBox/styles/normal = SubResource( 9 )
CheckBox/styles/pressed = SubResource( 9 )
Label/styles/normal = SubResource( 2 )
PanelContainer/styles/panel = SubResource( 10 )

[sub_resource type="GDScript" id=12]
script/source = "extends Control

var c := 0

onready var compass = $Compass
onready var notif_list := $Notifications
onready var weapons_slots = $\"Weapon Wheel\"

func _ready() -> void:
	Globals.connect(\"player_set\", self, \"_on_player_set\")
	
func _on_player_set(p: Player):
	p.inventory.connect(\"new_entry\", self, \"_on_new_entry\")
	p.inventory.connect(\"updated_entry\", self, \"_on_updated_entry\")
	p.inventory.connect(\"overweight\", self, \"inv_overw_notif\")
	
	compass._range = p.compass_range

func set_crosshair_text(text : Texture):
	$Crosshair/TextureRect.texture = text

func _on_new_entry(entry: Inventory.InventoryEntry):
	inv_change_notif(entry)

func _on_updated_entry(entry: Inventory.InventoryEntry):
	inv_change_notif(entry)
	
func inv_change_notif(entry: Inventory.InventoryEntry):
	notif_list.queue_notification(\"%s (%d)\" % [entry.name, entry.quantity])
	
func inv_overw_notif():
	notif_list.queue_notification(\"Inventory overweight\")

func _on_hook_ready(h) -> void:
	weapons_slots.load_weapons(h)
"

[sub_resource type="GDScript" id=39]
script/source = "extends Control

export(StreamTexture) var indicator_txt = preload(\"res://Assets/Sprites/UI/dmg_dir.png\")

func _ready() -> void:
	modulate.a = 0.0
	
	Globals.connect(\"player_set\", self, \"_on_player_set\")
	
	for i in range(0, 8):
		var s = Sprite.new()
		s.texture = indicator_txt
		
		add_child(s)
		s.offset.x = -s.texture.get_width()/2
		s.rotation = (TAU/8) * i
	
func _on_player_set(pl: Player):
	pl.hitbox.connect(\"hit\", self, \"_on_damage\")
	
func _input(event: InputEvent) -> void:
	if event is InputEventMouseMotion:
		pass #rect_rotation = Globals.player.rotation_degrees.y

func _on_damage(amount):
	modulate.a = 1.0
	
	var tween = create_tween()
	tween.tween_property(self, \"modulate:a\", 1.0, .2)
	tween.tween_property(self, \"modulate:a\", 0.0, .2).set_delay(.8)
	
"

[sub_resource type="Theme" id=1]

[sub_resource type="GDScript" id=15]
script/source = "extends Control

export(int) var max_labels = 5

var notif_queue : Array = []

onready var timer = $Timer
onready var container := $VBoxContainer

func queue_notification(msg: String):
	var lbl := Label.new()
	lbl.text = msg
	notif_queue.append(lbl)
	
	show_next()
	
func currently_shown():
	return container.get_child_count()
		
func has_next():
	return len(notif_queue) > 0
	
func show_next():
	if currently_shown() <= max_labels:
		var next = notif_queue.pop_front()
		container.add_child(next)
	
	if timer.is_stopped():
		timer.start()

func _on_timeout() -> void:
	if currently_shown() > 0:
		container.get_child(0).queue_free()
		show_next()
"

[sub_resource type="GDScript" id=19]
script/source = "extends Control

var _range = 24.0

var targets : Array = []
var dots : Array = []
var origin : Vector2 = Vector2.ZERO

onready var bg = $BG
onready var center = $CenterDot
		
func _process(delta: float) -> void:
	for i in range(0, len(dots)):
		var playerPos = Globals.player.global_transform.origin
		var tPos = (targets[i] as Spatial).global_transform.origin
		var p_delta = tPos - playerPos
		
		dots[i].position = pos_to_scrn_pos(Utils.vec3_horizontal(p_delta))
		
func add_target(t: Spatial, type = Globals.GROUPS.NEUTRAL):
	targets.append(t)
	var newDot : Sprite = Sprite.new()
	newDot.texture = center.texture
	newDot.modulate = get_target_color(type)
	newDot.scale *= .75
	
	dots.append(newDot)
	bg.add_child(newDot)
	
func get_target_color(type: int):
	match type:
		Globals.GROUPS.FRIENDLY: return Color.limegreen
		Globals.GROUPS.ENEMIES: return Color.red
		Globals.GROUPS.NEUTRAL: return Color.gray
		
	return Color.gray
	
func remove_target(t: Spatial):
	var idx = targets.find(t)
	
	targets.remove(idx)
	dots.remove(idx)
	bg.remove_child(bg.get_child(idx))
		
func pos_to_scrn_pos(p: Vector2):
	var text_size = bg.texture.get_size()
	var pos := Vector2.ZERO
	
	pos.x = clamp(p.x, -_range, _range)
	pos.x = range_lerp(p.x, -_range, _range, -1, 1)
	pos.y = clamp(p.y, -_range, _range)
	pos.y = range_lerp(p.y, -_range, _range, -1, 1)
	
	return pos * text_size/2

func _input(event: InputEvent) -> void:
	if event is InputEventMouseMotion:
		var y_rot = deg2rad(-event.relative.x * .1)
		bg.rotate(y_rot)
"

[sub_resource type="StyleBoxEmpty" id=17]

[sub_resource type="Theme" id=16]
Label/styles/normal = SubResource( 17 )

[sub_resource type="GDScript" id=20]
script/source = "extends Control

export(PackedScene) var slot_scn = preload(\"res://Scenes/UI/Weapon Slot.tscn\")
export(float) var tween_amount = 200.0

onready var slot_cont := $HBoxContainer
onready var timer := $Timer
onready var tween := $Tween

var enabled := true setget set_enabled
func set_enabled(value):
	enabled = value
	if not enabled:
		tween_pos(false)

var slots := []
var current_slot := 0
var visible_pos := 0.0
var hidden_pos := 0.0

func _ready() -> void:
	slot_cont.get_child(0).queue_free()
	
func load_weapons(hook):
	hook.connect(\"weapon_switched\", self, \"_on_gun_switched\")
	
	for i in range(0, len(hook.weapons)):
		var slot = slot_scn.instance()
		slot_cont.add_child(slot)
		
		slot.setup(i + 1, hook.weapons[i].icon)
		slots.append(slot)
	
	visible_pos = rect_position.y
	hidden_pos = rect_position.y + tween_amount
	
	rect_position.y = hidden_pos
	
func _on_gun_switched(to: int):
	if enabled:
		tween_pos(true)
		timer.start()
		
		slots[current_slot].set_focused(false)
		slots[to].set_focused(true)
		current_slot = to
		
func tween_pos(up := true):
	var dest = visible_pos if up else hidden_pos
		
	tween.interpolate_property(self, \"rect_position:y\", \\
		null, dest, .2, \\
		Tween.TRANS_EXPO, Tween.EASE_OUT)
	tween.start()

func _on_timeout() -> void:
	tween_pos(false)
"

[sub_resource type="StyleBoxFlat" id=18]
bg_color = Color( 0.117647, 0.117647, 0.117647, 1 )
corner_radius_top_left = 8
corner_radius_top_right = 8
shadow_color = Color( 0.87451, 0.87451, 0.87451, 0.6 )
shadow_size = 4

[sub_resource type="GDScript" id=28]
script/source = "extends Control

onready var oxy_alert := $OxyAlert
onready var bar := $Panel/ProgressBar
onready var dmg_lbl := $DamageLabel
onready var dmg_timer := $Timer
onready var bar_tween := $Panel/ProgressBar/Tween

func _ready() -> void:
	Globals.connect_to_player_set(self, \"_on_player_set\")
	dmg_lbl.visible = false
	
func _on_player_set(pl: Player):
	bar.setup(pl.hitbox.health)
	
	pl.hitbox.connect(\"changed\", self, \"_on_hp_change\")
	pl.connect(\"drown_started\", self, \"_on_drown_start\")
	pl.connect(\"drown_stopped\", self, \"_on_drown_stop\")
	
func _on_hp_change(amount):
	bar.hp_changed(amount)
	
	dmg_lbl.text = \"%.2f\" % (amount)
	dmg_lbl.visible = true
	dmg_timer.start()
	
func _on_drown_start():
	oxy_alert.slide_down()
	
func _on_drown_stop():
	oxy_alert.slide_up()

func _on_timeout() -> void:
	dmg_lbl.visible = false
"

[sub_resource type="StyleBoxFlat" id=45]
content_margin_left = 10.0
content_margin_right = 10.0
content_margin_top = 5.0
content_margin_bottom = 5.0
bg_color = Color( 0.501961, 0.12549, 0.12549, 0.776471 )
border_color = Color( 0.945098, 0.156863, 0.156863, 1 )
border_blend = true
corner_radius_bottom_right = 8
corner_radius_bottom_left = 8
shadow_color = Color( 1, 0, 0, 1 )
shadow_size = 4

[sub_resource type="GDScript" id=48]
script/source = "extends PanelContainer

var initial_pos : float
var amnt : float

func _ready() -> void:
	initial_pos = rect_position.y
	amnt = rect_size.y + 4
	rect_position.y -= amnt
	
func slide_down():
	slide(1.0)
	
func slide_up():
	slide(-1.0)
	
func slide(dir : float):
	var t := create_tween()
	var final = rect_position.y + sign(dir) * amnt
	t.tween_property(self, \"rect_position:y\", final, 0.05)
"

[sub_resource type="DynamicFont" id=47]
size = 38
use_filter = true
font_data = ExtResource( 8 )

[sub_resource type="StyleBoxEmpty" id=46]

[sub_resource type="StyleBoxFlat" id=24]
content_margin_left = 40.0
content_margin_right = 40.0
content_margin_top = 8.0
content_margin_bottom = 8.0
bg_color = Color( 0.117647, 0.117647, 0.117647, 1 )
corner_radius_bottom_right = 25
corner_radius_bottom_left = 25
shadow_color = Color( 0.87451, 0.87451, 0.87451, 1 )
shadow_size = 4

[sub_resource type="DynamicFont" id=27]
size = 5
use_filter = true
font_data = ExtResource( 8 )

[sub_resource type="StyleBoxFlat" id=34]
resource_local_to_scene = true
bg_color = Color( 1, 1, 1, 1 )
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10

[sub_resource type="StyleBoxFlat" id=35]
resource_local_to_scene = true
bg_color = Color( 0.117647, 0.117647, 0.117647, 1 )
border_width_left = 4
border_width_top = 4
border_width_right = 4
border_width_bottom = 4
border_color = Color( 1, 1, 1, 1 )
corner_radius_top_left = 14
corner_radius_top_right = 14
corner_radius_bottom_right = 14
corner_radius_bottom_left = 14
expand_margin_left = 4.0
expand_margin_right = 4.0
expand_margin_top = 4.0
expand_margin_bottom = 4.0

[sub_resource type="GDScript" id=36]
script/source = "extends ProgressBar

onready var tween := $Tween

func setup(max_hp: float):
	max_value = max_hp
	value = max_value
	
func hp_changed(amount):
	var fg_style : StyleBoxFlat = get_stylebox(\"fg\") as StyleBoxFlat
	var orig_color = fg_style.bg_color
	
	fg_style.bg_color = Color.red if amount < 0 else Color.green
	
	tween.interpolate_property(self, \"value\", \\
		null, value + amount, .08, \\
		Tween.TRANS_EXPO, Tween.EASE_OUT)
	tween.interpolate_property(fg_style, \"bg_color\", \\
		null, orig_color, .5, \\
		Tween.TRANS_LINEAR, Tween.EASE_IN, .5)
	tween.start()
"

[sub_resource type="DynamicFont" id=40]
size = 40
use_filter = true
font_data = ExtResource( 8 )

[sub_resource type="StyleBoxFlat" id=41]
content_margin_left = 20.0
content_margin_right = 20.0
content_margin_top = 10.0
content_margin_bottom = 10.0
bg_color = Color( 0.6, 0.6, 0.6, 0.541176 )
border_width_left = 8
border_width_top = 8
border_width_right = 8
border_width_bottom = 8
border_color = Color( 0.160784, 0.160784, 0.160784, 1 )
corner_radius_bottom_left = 10

[sub_resource type="GDScript" id=43]
script/source = "extends PanelContainer


func _ready() -> void:
	visible = false
	
	Console.add_command(\"toggle_debug\", self, \"toggle\")\\
	.set_description(\"Toggles debug info in HUD\")\\
	.register()
	
func toggle():
	set_text()
	visible = not visible

func _process(delta: float) -> void:
	if not visible:
		return
	set_text()
		
func set_text():
	$Label.text = \"[ERROR] No player found\"
	
	if Globals.player:
		$Label.text = \\
		\"\"\"FPS: %s (%s)
		Velocity: %s
		Direction: %s
		Environment: %s\"\"\" % \\
		[Engine.get_frames_per_second(), Engine.target_fps,
		Utils.round_vec3(Globals.player.mover.velocity, 2),
		Utils.round_vec3(Globals.player.mover.direction, 2),
		Globals.player.env_chk.env_type]
"

[sub_resource type="DynamicFont" id=44]
font_data = ExtResource( 9 )

[sub_resource type="StyleBoxEmpty" id=42]

[sub_resource type="Shader" id=37]
code = "shader_type canvas_item;

uniform float uvx_divisor = 3.0;
uniform float uvx_exponent = 2.0;
uniform float uvy_divisor = 3.0;
uniform float uvy_exponent = 2.0;


uniform float lens_k1 = 1.2;
uniform float lens_k2 = 1.0;
uniform float lens_k3 = -3.2;



uniform float alpha = 1.0;

bool compare(float v, float target, float delta) {
	return abs(v - target) <= delta/2.0;
}

float remap_range(float value, float InputA, float InputB, float OutputA, float OutputB) {
    return(value - InputA) / (InputB - InputA) * (OutputB - OutputA) + OutputA;
}

float smooth_compare(float val, float ref, float delta, float harhsness, bool reverse)
{
	float diff = abs(val-ref);
	float output = remap_range(diff, harhsness/2.0, delta/2.0, 0.0, 1.0);
	
	return (reverse) ? 1.0 - output : output;
}

vec2 uv_curve(vec2 uv)
{
	uv = (uv - 0.5) * 2.0;
	
	//You can modify the numbers and try different values
	uv.x *= 1.0 + pow(abs(uv.y) / uvx_divisor, uvx_exponent);
	uv.y *= 1.0 + pow(abs(uv.x) / uvx_divisor, uvx_exponent);
	
	//The scale part (you can delete it when you want)
	uv /= 1.2;
	
	uv = (uv/2.0) + 0.5;
	return uv;
}

float aspect_ratio(vec2 sps) {
	return (sps.x > sps.y) ? (sps.y / sps.x) : (sps.x / sps.y);
}

vec2 resolution(vec2 sps) {
	return 1.0 / sps;
}

vec4 mainImage(vec2 uv, vec2 sps, sampler2D screen_txt)
{
	float aspect = aspect_ratio(sps);
	vec2 disorsion = uv-.5;

	disorsion.x*=aspect; // aspect correction
    
    // take distance from center
	float len = length(disorsion);
    
    // these are the lens parameters
	float k1 = lens_k1;
	float k2 = lens_k2;
	float k3 = lens_k3;
    
	disorsion 
		= disorsion*k1 
		+ disorsion*len*k2 
		+ disorsion*len*len*k3;
		// higher powers may be added if necessary

	disorsion.x/=aspect; // aspect correction
    
	vec4 col = texture(screen_txt, disorsion+.5);
    
	float edge = 0.7;
	float dispersion = 0.03;
	col *= vec4(
		pow(max(edge-len, 0.0), 0.2),
		pow(max(edge-dispersion-len, 0.0), 0.2),
		pow(max(edge-dispersion*2.0-len, 0.0), 0.2),
		1);
		
	col*=1.2;

	return col;
}

void fragment()
{
	discard;
	COLOR = mainImage(SCREEN_UV * 2.0 - .5, SCREEN_PIXEL_SIZE, SCREEN_TEXTURE);
	COLOR.a = alpha;
}"

[sub_resource type="ShaderMaterial" id=38]
shader = SubResource( 37 )
shader_param/uvx_divisor = 0.592
shader_param/uvx_exponent = 19.96
shader_param/uvy_divisor = 3.0
shader_param/uvy_exponent = 2.0
shader_param/lens_k1 = -5.148
shader_param/lens_k2 = 4.334
shader_param/lens_k3 = -9.057
shader_param/alpha = 1.0

[node name="Hud" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
theme = SubResource( 11 )
script = SubResource( 12 )

[node name="Crosshair" type="CenterContainer" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="DmgIndicator" type="Control" parent="Crosshair"]
margin_left = 960.0
margin_top = 540.0
margin_right = 960.0
margin_bottom = 540.0
script = SubResource( 39 )

[node name="Center" type="Control" parent="Crosshair"]
margin_left = 960.0
margin_top = 540.0
margin_right = 960.0
margin_bottom = 540.0
script = ExtResource( 4 )
__meta__ = {
"_edit_use_anchors_": false
}
stroke = Color( 0.0941176, 0.0941176, 0.0941176, 0.372549 )
stroke_weight = 1.021
radius = 5.479

[node name="TextureRect" type="TextureRect" parent="Crosshair"]
margin_left = 928.0
margin_top = 508.0
margin_right = 992.0
margin_bottom = 572.0
theme = SubResource( 1 )
texture = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Notifications" type="Control" parent="."]
margin_left = 40.0
margin_top = 32.0
margin_right = 282.0
margin_bottom = 473.0
script = SubResource( 15 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Timer" type="Timer" parent="Notifications"]

[node name="VBoxContainer" type="VBoxContainer" parent="Notifications"]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="Compass" type="Control" parent="."]
anchor_top = 1.0
anchor_bottom = 1.0
margin_top = -300.0
margin_right = 300.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource( 19 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="BG" type="Sprite" parent="Compass"]
position = Vector2( 150, 150 )
texture = ExtResource( 7 )

[node name="CenterDot" type="TextureRect" parent="Compass"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -9.0
margin_top = -9.0
margin_right = 9.0
margin_bottom = 9.0
texture = ExtResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Weapon Wheel" type="Control" parent="."]
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
margin_left = -381.0
margin_top = -121.0
margin_right = 381.0
theme = SubResource( 16 )
script = SubResource( 20 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Panel" type="Panel" parent="Weapon Wheel"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
custom_styles/panel = SubResource( 18 )

[node name="HBoxContainer" type="HBoxContainer" parent="Weapon Wheel"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = 327.0
margin_bottom = 52.0
rect_scale = Vector2( 0.7, 0.7 )
custom_constants/separation = 0
alignment = 1

[node name="Weapon Slot" parent="Weapon Wheel/HBoxContainer" instance=ExtResource( 6 )]
margin_left = 472.0
margin_right = 617.0
margin_bottom = 173.0
rect_scale = Vector2( 1, 1 )

[node name="Timer" type="Timer" parent="Weapon Wheel"]
one_shot = true

[node name="Tween" type="Tween" parent="Weapon Wheel"]

[node name="HP Bar" type="Control" parent="."]
anchor_left = 0.5
anchor_right = 0.5
script = SubResource( 28 )

[node name="OxyAlert" type="PanelContainer" parent="HP Bar"]
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -354.0
margin_top = 62.0
margin_right = -222.0
margin_bottom = 113.0
custom_styles/panel = SubResource( 45 )
script = SubResource( 48 )

[node name="Label" type="Label" parent="HP Bar/OxyAlert"]
margin_left = 10.0
margin_top = 5.0
margin_right = 122.0
margin_bottom = 47.0
custom_fonts/font = SubResource( 47 )
custom_styles/normal = SubResource( 46 )
text = "Oxygen!"

[node name="Panel" type="PanelContainer" parent="HP Bar"]
anchor_left = 0.5
anchor_right = 0.5
margin_left = -394.0
margin_right = 394.0
margin_bottom = 62.0
custom_styles/panel = SubResource( 24 )

[node name="ProgressBar" type="ProgressBar" parent="HP Bar/Panel"]
margin_left = 40.0
margin_top = 24.0
margin_right = 748.0
margin_bottom = 38.0
size_flags_vertical = 6
custom_colors/font_color = Color( 0, 0, 0, 0 )
custom_fonts/font = SubResource( 27 )
custom_styles/fg = SubResource( 34 )
custom_styles/bg = SubResource( 35 )
value = 50.0
script = SubResource( 36 )

[node name="Tween" type="Tween" parent="HP Bar/Panel/ProgressBar"]

[node name="DamageLabel" type="Label" parent="HP Bar"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -38.0
margin_top = 77.0
margin_right = 38.0
margin_bottom = 121.0
custom_fonts/font = SubResource( 40 )
text = " 000 "
align = 1
valign = 1

[node name="Timer" type="Timer" parent="HP Bar"]
one_shot = true

[node name="DebugInfo" type="PanelContainer" parent="."]
visible = false
anchor_left = 1.0
anchor_right = 1.0
margin_left = -422.0
margin_bottom = 344.0
custom_styles/panel = SubResource( 41 )
script = SubResource( 43 )

[node name="Label" type="Label" parent="DebugInfo"]
margin_left = 20.0
margin_top = 10.0
margin_right = 402.0
margin_bottom = 334.0
size_flags_vertical = 7
custom_fonts/font = SubResource( 44 )
custom_styles/normal = SubResource( 42 )
text = "FPS: 69
Current env: ur mom"
align = 2

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource( 38 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2

[connection signal="timeout" from="Notifications/Timer" to="Notifications" method="_on_timeout"]
[connection signal="timeout" from="Weapon Wheel/Timer" to="Weapon Wheel" method="_on_timeout"]
[connection signal="timeout" from="HP Bar/Timer" to="HP Bar" method="_on_timeout"]
