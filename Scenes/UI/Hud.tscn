[gd_scene load_steps=30 format=2]

[ext_resource path="res://Assets/Sprites/crosshair.svg" type="Texture" id=1]
[ext_resource path="res://Assets/Sprites/compass_center.svg" type="Texture" id=2]
[ext_resource path="res://base font.tres" type="DynamicFont" id=3]
[ext_resource path="res://Assets/Sprites/crosshair_bg.svg" type="Texture" id=4]
[ext_resource path="res://Assets/Fonts/Prompt/Prompt-SemiBold.ttf" type="DynamicFontData" id=5]
[ext_resource path="res://Scenes/UI/Weapon Slot.tscn" type="PackedScene" id=6]
[ext_resource path="res://Assets/Sprites/compass.svg" type="Texture" id=7]
[ext_resource path="res://Assets/Fonts/Default Font.ttf" type="DynamicFontData" id=8]

[sub_resource type="DynamicFont" id=8]
size = 48
use_filter = true
font_data = ExtResource( 5 )

[sub_resource type="StyleBoxFlat" id=7]
bg_color = Color( 0.117647, 0.117647, 0.117647, 1 )
border_width_left = 2
border_width_top = 2
border_width_right = 2
border_width_bottom = 2
corner_radius_top_left = 5
corner_radius_top_right = 5
corner_radius_bottom_right = 5
corner_radius_bottom_left = 5
expand_margin_left = 5.0
expand_margin_right = 5.0
expand_margin_top = 5.0
expand_margin_bottom = 5.0

[sub_resource type="StyleBoxFlat" id=5]
bg_color = Color( 0.329412, 0.329412, 0.329412, 1 )
corner_radius_top_left = 5
corner_radius_top_right = 5
corner_radius_bottom_right = 5
corner_radius_bottom_left = 5
expand_margin_left = 5.0
expand_margin_right = 5.0
expand_margin_top = 5.0
expand_margin_bottom = 5.0
shadow_color = Color( 0.3264, 0.96, 0.62208, 0.560784 )
shadow_size = 6

[sub_resource type="StyleBoxFlat" id=4]
bg_color = Color( 0.117647, 0.117647, 0.117647, 1 )
expand_margin_left = 5.0
expand_margin_right = 5.0
expand_margin_top = 5.0
expand_margin_bottom = 5.0
shadow_color = Color( 0.1617, 0.77, 0.445573, 0.560784 )
shadow_size = 4

[sub_resource type="StyleBoxEmpty" id=9]

[sub_resource type="StyleBoxFlat" id=2]
bg_color = Color( 0, 0, 0, 0.290196 )

[sub_resource type="StyleBoxFlat" id=10]
corner_radius_top_left = 4
corner_radius_top_right = 4
corner_radius_bottom_right = 4
corner_radius_bottom_left = 4
expand_margin_left = 5.0
expand_margin_right = 5.0

[sub_resource type="Theme" id=11]
default_font = ExtResource( 3 )
Button/fonts/font = SubResource( 8 )
Button/styles/focus = SubResource( 7 )
Button/styles/hover = SubResource( 5 )
Button/styles/normal = SubResource( 4 )
Button/styles/pressed = SubResource( 7 )
CheckBox/styles/focus = SubResource( 9 )
CheckBox/styles/hover = SubResource( 9 )
CheckBox/styles/hover_pressed = SubResource( 9 )
CheckBox/styles/normal = SubResource( 9 )
CheckBox/styles/pressed = SubResource( 9 )
Label/styles/normal = SubResource( 2 )
PanelContainer/styles/panel = SubResource( 10 )

[sub_resource type="GDScript" id=12]
script/source = "extends Control

var c := 0

onready var compass = $Compass
onready var notif_list := $Notifications

func _ready() -> void:
	Globals.connect(\"player_set\", self, \"_on_player_set\")
	
func _on_player_set(p: Player):
	p.inventory.connect(\"new_entry\", self, \"_on_new_entry\")
	p.inventory.connect(\"updated_entry\", self, \"_on_updated_entry\")
	p.inventory.connect(\"overweight\", self, \"inv_overw_notif\")
	
	compass._range = p.compass_range

func set_crosshair_text(text : Texture):
	$Crosshair/TextureRect.texture = text

func _on_new_entry(entry: Inventory.InventoryEntry):
	inv_change_notif(entry)

func _on_updated_entry(entry: Inventory.InventoryEntry):
	inv_change_notif(entry)
	
func inv_change_notif(entry: Inventory.InventoryEntry):
	notif_list.queue_notification(\"%s (%d)\" % [entry.name, entry.quantity])
	
func inv_overw_notif():
	notif_list.queue_notification(\"Inventory overweight\")
	
"

[sub_resource type="Theme" id=1]

[sub_resource type="GDScript" id=15]
script/source = "extends Control

export(int) var max_labels = 5

var notif_queue : Array = []

onready var timer = $Timer
onready var container := $VBoxContainer

func queue_notification(msg: String):
	var lbl := Label.new()
	lbl.text = msg
	notif_queue.append(lbl)
	
	show_next()
	
func currently_shown():
	return container.get_child_count()
		
func has_next():
	return len(notif_queue) > 0
	
func show_next():
	if currently_shown() <= max_labels:
		var next = notif_queue.pop_front()
		container.add_child(next)
	
	if timer.is_stopped():
		timer.start()

func _on_timeout() -> void:
	if currently_shown() > 0:
		container.get_child(0).queue_free()
		show_next()
"

[sub_resource type="GDScript" id=19]
script/source = "extends Control

var _range = 24.0

var targets : Array = []
var dots : Array = []
var origin : Vector2 = Vector2.ZERO

onready var bg = $BG
onready var center = $CenterDot
		
func _process(delta: float) -> void:
	for i in range(0, len(dots)):
		var playerPos = Globals.player.global_transform.origin
		var tPos = (targets[i] as Spatial).global_transform.origin
		var p_delta = tPos - playerPos
		
		dots[i].position = pos_to_scrn_pos(Utils.vec3_horizontal(p_delta))
		
func add_target(t: Spatial, type = Globals.GROUPS.NEUTRAL):
	targets.append(t)
	var newDot : Sprite = Sprite.new()
	newDot.texture = center.texture
	newDot.modulate = get_target_color(type)
	newDot.scale *= .75
	
	dots.append(newDot)
	bg.add_child(newDot)
	
func get_target_color(type: int):
	match type:
		Globals.GROUPS.FRIENDLY: return Color.limegreen
		Globals.GROUPS.ENEMIES: return Color.red
		Globals.GROUPS.NEUTRAL: return Color.gray
		
	return Color.gray
	
func remove_target(t: Spatial):
	var idx = targets.find(t)
	
	targets.remove(idx)
	dots.remove(idx)
	bg.remove_child(bg.get_child(idx))
		
func pos_to_scrn_pos(p: Vector2):
	var text_size = bg.texture.get_size()
	var pos := Vector2.ZERO
	
	pos.x = clamp(p.x, -_range, _range)
	pos.x = range_lerp(p.x, -_range, _range, -1, 1)
	pos.y = clamp(p.y, -_range, _range)
	pos.y = range_lerp(p.y, -_range, _range, -1, 1)
	
	return pos * text_size/2

func _input(event: InputEvent) -> void:
	if event is InputEventMouseMotion:
		var y_rot = deg2rad(-event.relative.x * .1)
		bg.rotate(y_rot)
"

[sub_resource type="StyleBoxEmpty" id=17]

[sub_resource type="Theme" id=16]
Label/styles/normal = SubResource( 17 )

[sub_resource type="GDScript" id=20]
script/source = "extends Control

export(PackedScene) var slot_scn = preload(\"res://Scenes/UI/Weapon Slot.tscn\")
export(float) var tween_amount = 200.0

onready var slot_cont := $HBoxContainer
onready var timer := $Timer
onready var tween := $Tween

var slots := []
var current_slot := 0
var visible_pos := 0.0

func _ready() -> void:
	Globals.connect(\"player_set\", self, \"_on_player_set\")
	
	slot_cont.get_child(0).queue_free()

func _on_player_set(p: Player):
	var hook = p.gun_hook
	hook.connect(\"weapon_switched\", self, \"_on_gun_switched\")
	
	for i in range(0, len(hook.weapons)):
		var slot = slot_scn.instance()
		slot_cont.add_child(slot)
		
		slot.setup(i + 1, hook.weapons[i].icon)
		slots.append(slot)
	
	visible_pos = rect_position.y
	rect_position.y += tween_amount
	
func _on_gun_switched(to: int):
	tween_pos(true)
	timer.start()
	
	slots[current_slot].set_focused(false)
	slots[to].set_focused(true)
	current_slot = to
	
func tween_pos(up := true):
	var current := rect_position.y
	
	if not up or current != visible_pos:
		var dir = -1 if up else 1
		
		tween.interpolate_property(self, \"rect_position:y\", \\
			current, current + tween_amount*dir, .2, \\
			Tween.TRANS_EXPO, Tween.EASE_OUT)
		tween.start()

func _on_timeout() -> void:
	tween_pos(false)
"

[sub_resource type="StyleBoxFlat" id=18]
bg_color = Color( 0.117647, 0.117647, 0.117647, 1 )
corner_radius_top_left = 8
corner_radius_top_right = 8
shadow_color = Color( 0.87451, 0.87451, 0.87451, 0.6 )
shadow_size = 4

[sub_resource type="GDScript" id=28]
script/source = "extends Control

onready var bar := $Panel/VBoxContainer/ProgressBar
onready var dmg_lbl := $DamageLabel
onready var dmg_timer := $Timer

func _ready() -> void:
	Globals.connect(\"player_set\", self, \"_on_player_set\")
	dmg_lbl.visible = false
	
func _on_player_set(pl: Player):
	bar.max_value = pl.hitbox.initial_health
	bar.value = bar.max_value
	
	pl.hitbox.connect(\"changed\", self, \"_on_hp_change\")
	
func _on_hp_change(amount):
	bar.value += amount
	dmg_lbl.text = \"%.2f\" % abs(amount)
	dmg_lbl.visible = true
	dmg_timer.start()


func _on_timeout() -> void:
	dmg_lbl.visible = false
"

[sub_resource type="StyleBoxFlat" id=24]
content_margin_left = 40.0
content_margin_right = 40.0
content_margin_top = 8.0
content_margin_bottom = 8.0
bg_color = Color( 0.117647, 0.117647, 0.117647, 1 )
corner_radius_bottom_right = 30
corner_radius_bottom_left = 30
shadow_color = Color( 0.87451, 0.87451, 0.87451, 0.6 )
shadow_size = 4

[sub_resource type="DynamicFont" id=27]
size = 5
use_filter = true
font_data = ExtResource( 8 )

[sub_resource type="StyleBoxFlat" id=25]
bg_color = Color( 0.270588, 1, 0.156863, 1 )
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10

[sub_resource type="StyleBoxFlat" id=26]
bg_color = Color( 0.117647, 0.117647, 0.117647, 1 )
border_width_left = 4
border_width_top = 4
border_width_right = 4
border_width_bottom = 4
border_color = Color( 1, 1, 1, 1 )
corner_radius_top_left = 14
corner_radius_top_right = 14
corner_radius_bottom_right = 14
corner_radius_bottom_left = 14
expand_margin_left = 4.0
expand_margin_right = 4.0
expand_margin_top = 4.0
expand_margin_bottom = 4.0

[node name="Hud" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
theme = SubResource( 11 )
script = SubResource( 12 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Crosshair" type="CenterContainer" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_group_": true,
"_edit_use_anchors_": false
}

[node name="TextureRect2" type="TextureRect" parent="Crosshair"]
margin_left = 925.0
margin_top = 505.0
margin_right = 995.0
margin_bottom = 575.0
grow_horizontal = 2
grow_vertical = 2
theme = SubResource( 1 )
texture = ExtResource( 4 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect" type="TextureRect" parent="Crosshair"]
margin_left = 934.0
margin_top = 514.0
margin_right = 986.0
margin_bottom = 566.0
theme = SubResource( 1 )
texture = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Notifications" type="Control" parent="."]
margin_left = 40.0
margin_top = 32.0
margin_right = 282.0
margin_bottom = 473.0
script = SubResource( 15 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Timer" type="Timer" parent="Notifications"]

[node name="VBoxContainer" type="VBoxContainer" parent="Notifications"]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Compass" type="Control" parent="."]
anchor_top = 1.0
anchor_bottom = 1.0
margin_top = -300.0
margin_right = 300.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource( 19 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="BG" type="Sprite" parent="Compass"]
position = Vector2( 150, 150 )
texture = ExtResource( 7 )

[node name="CenterDot" type="TextureRect" parent="Compass"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -9.0
margin_top = -9.0
margin_right = 9.0
margin_bottom = 9.0
texture = ExtResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Weapon Wheel" type="Control" parent="."]
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
margin_left = -381.0
margin_top = -121.0
margin_right = 381.0
theme = SubResource( 16 )
script = SubResource( 20 )
__meta__ = {
"_edit_group_": true,
"_edit_use_anchors_": false
}

[node name="Panel" type="Panel" parent="Weapon Wheel"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -21.0
margin_top = -18.0
margin_right = 23.0
custom_styles/panel = SubResource( 18 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HBoxContainer" type="HBoxContainer" parent="Weapon Wheel"]
anchor_right = 1.0
anchor_bottom = 1.0
alignment = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Weapon Slot" parent="Weapon Wheel/HBoxContainer" instance=ExtResource( 6 )]
margin_left = 308.0
margin_right = 453.0
margin_bottom = 121.0

[node name="Timer" type="Timer" parent="Weapon Wheel"]
one_shot = true

[node name="Tween" type="Tween" parent="Weapon Wheel"]

[node name="HP Bar" type="Control" parent="."]
anchor_left = 0.5
anchor_right = 0.5
script = SubResource( 28 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Panel" type="PanelContainer" parent="HP Bar"]
anchor_left = 0.5
anchor_right = 0.5
margin_left = -394.0
margin_right = 394.0
margin_bottom = 62.0
custom_styles/panel = SubResource( 24 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="HP Bar/Panel"]
margin_left = 40.0
margin_top = 8.0
margin_right = 748.0
margin_bottom = 54.0
alignment = 1

[node name="ProgressBar" type="ProgressBar" parent="HP Bar/Panel/VBoxContainer"]
margin_top = 15.0
margin_right = 708.0
margin_bottom = 31.0
custom_colors/font_color = Color( 0, 0, 0, 0 )
custom_fonts/font = SubResource( 27 )
custom_styles/fg = SubResource( 25 )
custom_styles/bg = SubResource( 26 )
value = 50.0

[node name="DamageLabel" type="Label" parent="HP Bar"]
anchor_left = 0.5
anchor_right = 0.5
margin_left = -20.0
margin_top = 72.6679
margin_right = 20.0
margin_bottom = 102.668
text = "000"
align = 1
valign = 1

[node name="Timer" type="Timer" parent="HP Bar"]
one_shot = true

[connection signal="timeout" from="Notifications/Timer" to="Notifications" method="_on_timeout"]
[connection signal="timeout" from="Weapon Wheel/Timer" to="Weapon Wheel" method="_on_timeout"]
[connection signal="timeout" from="HP Bar/Timer" to="HP Bar" method="_on_timeout"]
