[gd_scene load_steps=42 format=2]

[ext_resource path="res://Scripts/UI/ScaleOnHover.gd" type="Script" id=1]
[ext_resource path="res://base font.tres" type="DynamicFont" id=2]
[ext_resource path="res://Assets/Fonts/Default Font.ttf" type="DynamicFontData" id=3]
[ext_resource path="res://Scenes/Story/Backdrops/part_0_backdrop.tscn" type="PackedScene" id=4]
[ext_resource path="res://Materials/Shaders/blur.shader" type="Shader" id=7]
[ext_resource path="res://Scenes/UI/SettingsPanel.tscn" type="PackedScene" id=10]
[ext_resource path="res://Assets/Fonts/AldoApache/AldotheApache.ttf" type="DynamicFontData" id=13]

[sub_resource type="DynamicFontData" id=1074]
override_oversampling = 2.0
font_path = "res://Assets/Fonts/Default Font.ttf"

[sub_resource type="DynamicFont" id=315]
size = 30
use_mipmaps = true
use_filter = true
font_data = SubResource( 1074 )

[sub_resource type="Theme" id=316]
default_font = SubResource( 315 )

[sub_resource type="GDScript" id=14]
script/source = "extends Control

signal hide_visible_panels

onready var main_pan = get_node(\"%MainPanel\")
onready var scene_hub_pan = get_node(\"%SceneHubPanel\")
onready var saves_pan = get_node(\"%SavesPanel\")
onready var settings_pan = get_node(\"%SettingsPanel\")
onready var about_pan = get_node(\"%AboutPanel\")

var current_panel : PanelContainer = null

func _ready() -> void:
	Globals.in_game = false
	Input.set_mouse_mode(Input.MOUSE_MODE_VISIBLE)
	
	grab_focus()

func _input(event: InputEvent) -> void:
	if Input.is_action_just_pressed(\"debug_quit\"):
		set_current_panel(null)
	
	if Input.is_action_just_pressed(\"ui_focus_next\") and has_focus():
		main_pan._on_mouse_entered()

func _on_QuitBtn_pressed() -> void:
	Globals.quit()

func _on_NewBtn_pressed() -> void:
	set_current_panel(scene_hub_pan)

func _on_LoadBtn_pressed() -> void:
	set_current_panel(saves_pan)

func _on_SettingsBtn_pressed() -> void:
	set_current_panel(settings_pan)

func _on_AboutBtn_pressed() -> void:
	set_current_panel(about_pan)

func set_current_panel(p: PanelContainer = null):
	emit_signal(\"hide_visible_panels\")
		
	current_panel = p
	
	if current_panel:
		current_panel.visible = true
		current_panel.grab_focus()
	else:
		grab_focus()
"

[sub_resource type="ShaderMaterial" id=1083]
shader = ExtResource( 7 )
shader_param/amount = 2.0

[sub_resource type="Gradient" id=62]
offsets = PoolRealArray( 0 )
colors = PoolColorArray( 0, 0, 0, 1 )

[sub_resource type="GradientTexture" id=63]
gradient = SubResource( 62 )
width = 200

[sub_resource type="DynamicFont" id=13]
size = 250
use_filter = true
font_data = ExtResource( 13 )

[sub_resource type="StyleBoxFlat" id=56]
content_margin_left = 10.0
content_margin_right = 10.0
content_margin_top = 10.0
content_margin_bottom = 10.0
bg_color = Color( 0.505882, 0.505882, 0.505882, 1 )
border_width_left = 2
border_width_top = 2
border_width_right = 2
border_width_bottom = 2
border_color = Color( 1, 1, 1, 1 )
corner_radius_top_left = 4
corner_radius_top_right = 4
corner_radius_bottom_right = 4
corner_radius_bottom_left = 4
expand_margin_left = 8.0
expand_margin_right = 8.0
expand_margin_top = 8.0
expand_margin_bottom = 8.0
shadow_color = Color( 0, 0, 0, 0.278431 )
shadow_size = 10

[sub_resource type="GDScript" id=84]
script/source = "extends PanelContainer

enum SCENE_LIST {
	STORY,
	LEVELS,
	DEMOS
}

export(String, DIR) var story_dir = \"res://Scenes/Story\"
export(String, DIR) var levels_dir = \"res://Scenes/Levels\"
export(String, DIR) var demos_dir = \"res://Scenes/Misc tests\"
export(SCENE_LIST) var default_list = SCENE_LIST.STORY

var files := []
var selected : MapFile = null
var dirs_dict := {
	SCENE_LIST.STORY: [story_dir, \"Story\"],
	SCENE_LIST.LEVELS: [levels_dir, \"Test levels\"],
	SCENE_LIST.DEMOS: [demos_dir, \"Tech demos\"],
}
var current_dir

onready var map_error_popup := $Control/AcceptDialog
onready var search_bar := $VBoxContainer/SearchBar
onready var list : ItemList = $VBoxContainer/ScrollContainer/ItemList
onready var dir_list_btn : OptionButton = $VBoxContainer/HBoxContainer/OptionButton
onready var start_btn := $VBoxContainer/HBoxContainer/StartBtn

func _ready() -> void:
	visible = false
	var tests_enabled = Args.find_option(Args.ENABLE_TESTS)
	
	if not tests_enabled:
		current_dir = dirs_dict[SCENE_LIST.STORY][0]
		
		dir_list_btn.visible = false
		start_btn.size_flags_horizontal = SIZE_SHRINK_CENTER
	else:
		dir_list_btn.clear()
		for d in dirs_dict:
			dir_list_btn.add_item(dirs_dict[d][1])
			
		dir_list_btn.select(default_list)
	
		current_dir = dirs_dict[default_list][0]
	
	set_list(\"\", true)
		
func set_list(filter = \"\", notify_not_found := false):
	list.clear()
	files.clear()
	
	var faulty_maps := []
	var regex := RegEx.new()
	
	regex.compile(\"(?i)\" + filter)
	
	Console.write_line(\"Scanning folder '%s'...\" % current_dir)
	
	var count = 0
	
	for fr in Utils.list_files_in_directory(current_dir, [\"map\"]):
		var path = current_dir + \"/\" + fr
		var map := MapFile.new(path)
		
		match map.load_error:
			MapFile.NO_ERROR:
				
				if filter == \"\" or regex.search(map.display_name):
					Console.write_line(\"Found scene '%s' @ '%s'\" % [map.display_name, map.scene_file])
					list.add_item(map.display_name)
					list.set_item_tooltip(list.get_item_count()-1, map.description)
					files.append(map)
			MapFile.MF_INVALID_INCOMPLETE:
				Console.Log.error(\"Map file '%s' contains invalid or incomplete data\" % path)
				faulty_maps.append(path)
			MapFile.MF_SCENE_FILE_NOT_FOUND:
				Console.Log.error(\"Source scene '%s' not found [from map '%s']\" % [map.get_raw_scene_file(), map.display_name])
				faulty_maps.append(path)
				
	Console.write_line(\"Found %d scene files (loaded: %d)\" % [len(files), len(files) - len(faulty_maps)])
	
	if len(files) > 0:
		selected = files[0]
		
	if len(faulty_maps) > 0 and notify_not_found:
		map_error_popup.missing_scenes = faulty_maps.duplicate(true)
		map_error_popup.popup_centered()
		
		if Args.find_option(Args.DEL_FAULTY_MAPS):
			for fm in faulty_maps:
				var dir = Directory.new()
				dir.remove(fm)

func _on_hide_visible_panels() -> void:
	visible = false
	
func _on_item_selected(index: int) -> void:
	selected = files[index]

func _on_item_activated(index: int) -> void:
	load_scene(files[index])
	
func _on_StartBtn_pressed() -> void:
	load_scene(selected)

func load_scene(map_file: MapFile):
	Globals.load_scene(map_file.scene_file)

func _on_directory_selected(index: int) -> void:
	current_dir = dirs_dict[index][0]
		
	set_list()
	search_bar.text = \"\"

func _on_search_text_changed(new_text: String) -> void:
	set_list(new_text)
"

[sub_resource type="DynamicFont" id=386]
size = 20
use_filter = true
font_data = ExtResource( 3 )

[sub_resource type="DynamicFont" id=351]
size = 20
use_filter = true
font_data = ExtResource( 3 )

[sub_resource type="GDScript" id=1038]
script/source = "extends Button


func _ready() -> void:
	disabled = true


func _on_scene_selected(index: int) -> void:
	disabled = false


func _on_category_selected(index: int) -> void:
	disabled = true
"

[sub_resource type="GDScript" id=422]
script/source = "extends WindowDialog

var missing_scenes : PoolStringArray = []

onready var list := $VBoxContainer/ScrollContainer/ItemList

func _on_about_to_show() -> void:
	list.clear()
	
	for ms in missing_scenes:
		list.add_item(ms)
"

[sub_resource type="StyleBoxEmpty" id=421]
content_margin_left = 10.0
content_margin_right = 10.0
content_margin_bottom = 10.0

[sub_resource type="GDScript" id=1073]
script/source = "extends PanelContainer

export(String, DIR) var target_dir = SceneManager.SAVES_DIR

var scenes := []
var selected := -1
var current_dir = target_dir
var refresh_asap := false

onready var list : ItemList = $VBoxContainer/ScrollContainer/ItemList

func _ready() -> void:
	visible = false
	
	set_list(\"\", true)
	
func _notification(what: int) -> void:
	if what == MainLoop.NOTIFICATION_WM_FOCUS_IN and refresh_asap:
		set_list()
		refresh_asap = false
		
func set_list(filter = \"\", notify_not_found := false):
	list.clear()
	scenes.clear()
	
	var faulty_maps := []
	
	var regex := RegEx.new()
	regex.compile(\"(?i)\" + filter)
	Console.write_line(\"Scanning folder '%s'...\" % current_dir)
	var count = 0
	for fr in Utils.list_files_in_directory(current_dir, [\"scn\", \"tscn\"]):
		var path = current_dir + \"/\" + fr
		var data = SceneManager.unpack_save_name(fr)
		data.merge({
			\"path\": path
		})
		
		Console.write_line(\"Found scene '%s' @ '%s'\" % [data[\"name\"], fr])
		
		list.add_item(data[\"name\"])
		list.set_item_tooltip(list.get_item_count()-1, \\
			\"Saved at '%s' on '%s'\" % [data[\"now_time\"], data[\"now_date\"]])
			
		scenes.append(data)
	
	Console.write_line(\"Found %d scene files (loaded: %d)\" % [len(scenes), len(scenes) - len(faulty_maps)])
	
	if len(scenes) > 0:
		selected = 0
		
#	if len(faulty_maps) > 0 and notify_not_found:
#		map_error_popup.missing_scenes = faulty_maps.duplicate(true)
#		map_error_popup.popup_centered()

func _on_hide_visible_panels() -> void:
	visible = false
	
func _on_item_selected(index: int) -> void:
	selected = index

func _on_item_activated(index: int) -> void:
	load_scene(index)

func load_scene(idx: int):
	Console.write_line(\"Now loading: \" + scenes[idx].name)
	
	Globals.load_scene(scenes[idx].path)

func _on_StartSave_pressed() -> void:
	if selected != -1:
		load_scene(selected)

func _on_DeleteSave_pressed() -> void:
	if selected != -1:
		var path = scenes[selected].path
		
		var dir = Directory.new()
		if dir.remove(path) == 0:
			Console.write_line(\"Deleted savefile at '%s'\" % path)
			
			scenes.remove(selected)
			list.remove_item(selected)
			
			selected = -1

func _on_ReloadSaves_pressed() -> void:
	set_list()

func _on_OpenSavesDir_pressed() -> void:
	var p = ProjectSettings.globalize_path(SceneManager.SAVES_DIR)
	refresh_asap = true
	OS.shell_open(p)

"

[sub_resource type="StyleBoxFlat" id=10]
bg_color = Color( 0.176471, 0.176471, 0.176471, 1 )
border_width_left = 4
border_width_top = 4
border_width_right = 4
border_width_bottom = 4
border_color = Color( 1, 1, 1, 1 )
corner_radius_top_left = 4
corner_radius_top_right = 4
corner_radius_bottom_right = 4
corner_radius_bottom_left = 4
expand_margin_left = 8.0
expand_margin_right = 8.0
expand_margin_top = 8.0
expand_margin_bottom = 8.0
shadow_color = Color( 0, 0, 0, 0.278431 )
shadow_size = 10

[sub_resource type="GDScript" id=85]
script/source = "extends PanelContainer

func _ready() -> void:
	visible = false

func _on_hide_visible_panels() -> void:
	visible = false
"

[sub_resource type="DynamicFont" id=55]
size = 79
use_filter = true
font_data = ExtResource( 3 )

[sub_resource type="StyleBoxEmpty" id=1078]
content_margin_left = 20.0
content_margin_right = 20.0
content_margin_top = 20.0
content_margin_bottom = 40.0

[sub_resource type="DynamicFont" id=1075]
size = 24
use_mipmaps = true
use_filter = true
extra_spacing_space = 3
font_data = ExtResource( 3 )

[sub_resource type="Theme" id=1076]
default_font = SubResource( 1075 )

[sub_resource type="GDScript" id=1079]
script/source = "extends RichTextLabel


func _ready() -> void:
	connect(\"meta_clicked\", self, \"meta_pressed\")

func meta_pressed(meta):
	OS.shell_open(meta)
"

[sub_resource type="GDScript" id=1080]
script/source = "extends Label


func _ready() -> void:
	text = Globals.get_version(\"#%s [alpha]\")
"

[sub_resource type="GDScript" id=474]
script/source = "extends Label


func _ready() -> void:
	text = Utils.engine_description()
"

[sub_resource type="StyleBoxFlat" id=1077]
bg_color = Color( 0.266667, 0.286275, 0.431373, 0 )

[sub_resource type="DynamicFont" id=1081]
size = 20
use_mipmaps = true
use_filter = true
font_data = ExtResource( 3 )

[sub_resource type="GDScript" id=1082]
script/source = "extends LinkButton

onready var label = $RichTextLabel
onready var fb_dialog : WindowDialog = get_node(\"%FeedbackDialog\")

var body := \"\"

func _pressed() -> void:
	var id = OS.get_unique_id()
	
	fb_dialog.popup_centered()
	yield(fb_dialog, \"popup_hide\")
	
	if not fb_dialog.canceled:
		var subject = (\"Nameless dev feedback (%s)\" % id).replace(\" \", \"%20\")
		
		generate_body(fb_dialog.feedback_txt, fb_dialog.include_info)
		
		var email = \"contact.me@terenz.dev\"
		var url = \"mailto:%s?subject=%s&body=%s\" % [email, subject, body]
		
		OS.shell_open(url)
	
func datetime_to_string(date):
	if (
		date.has(\"year\")
		and date.has(\"month\")
		and date.has(\"day\")
		and date.has(\"hour\")
		and date.has(\"minute\")
		and date.has(\"second\")
	):
		# Date and time.
		return \"{year}-{month}-{day} {hour}:{minute}:{second}\".format({
			year = str(date.year).pad_zeros(2),
			month = str(date.month).pad_zeros(2),
			day = str(date.day).pad_zeros(2),
			hour = str(date.hour).pad_zeros(2),
			minute = str(date.minute).pad_zeros(2),
			second = str(date.second).pad_zeros(2),
		})
	elif date.has(\"year\") and date.has(\"month\") and date.has(\"day\"):
		# Date only.
		return \"{year}-{month}-{day}\".format({
			year = str(date.year).pad_zeros(2),
			month = str(date.month).pad_zeros(2),
			day = str(date.day).pad_zeros(2),
		})
	else:
		# Time only.
		return \"{hour}:{minute}:{second}\".format({
			hour = str(date.hour).pad_zeros(2),
			minute = str(date.minute).pad_zeros(2),
			second = str(date.second).pad_zeros(2),
		})
		
func add_header(header):
	body += (\"\\n[{header}]\\n\".format({
		header = header,
	}))

func add_line(key, value):
	body += (\"{key}: {value}\\n\".format({
		key = key,
		value = value if str(value) != \"\" else \"(NaN)\",
	}))

func sanitize_str_for_url(s):
	return s\\
		.replace(\"\\n\", \"%0A\")\\
		.replace(\" \", \"%20\")\\
		.replace(\"#\", \"%23\")

func generate_body(extra_feedback := \"\", include_info := true):
	
	if include_info:
		body += (\"\\n[DEBUG INFO]\\n\")
		
		add_header(\"Game\")
		add_line(\"Version\", Globals.get_version(\"#%s [alpha]\"))
		add_line(\"Running standalone\", OS.has_feature(\"standalone\"))
		add_line(\"Uptime (milliseconds)\", OS.get_ticks_msec())
		
		add_header(\"Time\")
		add_line(\"Date and time (local)\", datetime_to_string(OS.get_datetime()))
		add_line(\"Timezone\", OS.get_time_zone_info())
		add_line(\"System time (milliseconds)\", OS.get_system_time_msecs())
		add_line(\"UNIX time\", OS.get_unix_time())

		add_header(\"System\")
		add_line(\"OS name\", OS.get_name())
		add_line(\"Process ID\", OS.get_process_id())
		add_line(\"Locale\", OS.get_locale())

		add_header(\"Engine\")
		add_line(\"Version\", Engine.get_version_info()[\"string\"])
		add_line(\"Command-line arguments\", str(OS.get_cmdline_args()))
		add_line(\"Is debug build\", OS.is_debug_build())
		add_line(\"Executable path\", OS.get_executable_path())
		add_line(\"User data directory\", OS.get_user_data_dir())
		add_line(\"Filesystem is persistent\", OS.is_userfs_persistent())

		add_header(\"Hardware\")
		add_line(\"Processor count\", OS.get_processor_count())
		add_line(\"Video adapter name\", VisualServer.get_video_adapter_name())
		add_line(\"Video adapter vendor\", VisualServer.get_video_adapter_vendor())

		add_header(\"Video\")
		var video_drivers = PoolStringArray()
		for i in OS.get_video_driver_count():
			video_drivers.push_back(OS.get_video_driver_name(i))
		add_line(\"Available drivers\", video_drivers.join(\", \"))
		add_line(\"Current driver\", OS.get_video_driver_name(OS.get_current_video_driver()))

		add_header(\"Display\")
		add_line(\"Screen count\", OS.get_screen_count())
		add_line(\"DPI\", OS.get_screen_dpi())
		add_line(\"Refresh rate\", OS.get_screen_refresh_rate())
		add_line(\"Startup screen position\", OS.get_screen_position())
		add_line(\"Startup screen size\", OS.get_screen_size())
		add_line(\"Safe area rectangle\", OS.get_window_safe_area())
		add_line(\"Screen orientation\", [
			\"Landscape\",
			\"Portrait\",
			\"Landscape (reverse)\",
			\"Portrait (reverse)\",
			\"Landscape (defined by sensor)\",
			\"Portrait (defined by sensor)\",
			\"Defined by sensor\",
		][OS.screen_orientation])

		add_header(\"Input\")
		add_line(\"Latin keyboard variant\", OS.get_latin_keyboard_variant())
		add_line(\"Device has touch screen\", OS.has_touchscreen_ui_hint())
		add_line(\"Device has virtual keyboard\", OS.has_virtual_keyboard())
		add_line(\"Virtual keyboard height\", OS.get_virtual_keyboard_height())
		
		add_header(\"Audio\")
		var audio_drivers = PoolStringArray()
		for i in OS.get_audio_driver_count():
			audio_drivers.push_back(OS.get_audio_driver_name(i))
		add_line(\"Available drivers\", audio_drivers.join(\", \"))

	add_header(\"Extra feedback\")
	body += extra_feedback + \"\\n\"
	
	body = sanitize_str_for_url(body)
"

[sub_resource type="StyleBoxFlat" id=931]
bg_color = Color( 0.6, 0.6, 0.6, 0 )
border_width_right = 20

[sub_resource type="ShaderMaterial" id=61]
shader = ExtResource( 7 )
shader_param/amount = 1.2

[sub_resource type="DynamicFont" id=54]
size = 24
use_filter = true
font_data = ExtResource( 3 )

[sub_resource type="GDScript" id=1084]
script/source = "extends WindowDialog

### Automatic References Start ###
onready var _cancel_btn: Button = $MarginContainer/VBoxContainer/HBoxContainer/CancelBtn
onready var _check_box: CheckBox = $MarginContainer/VBoxContainer/CheckBox
onready var _send_btn: Button = $MarginContainer/VBoxContainer/HBoxContainer/SendBtn
onready var _text_edit: TextEdit = $MarginContainer/VBoxContainer/TextEdit
### Automatic References Stop ###

var canceled := false
var feedback_txt := \"\"
var include_info := true

func _on_SendBtn_pressed() -> void:
	feedback_txt = _text_edit.text
	include_info = _check_box.pressed
	hide()

func _on_CancelBtn_pressed() -> void:
	canceled = true
	hide()

func _on_about_to_show() -> void:
	canceled = false
	_check_box.pressed = true
	_text_edit.text = \"\"
"

[sub_resource type="Animation" id=985]
resource_name = "FadeIn"
length = 2.0
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../ColorRect:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ), Color( 0, 0, 0, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:rect_position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5, 2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 931, -258 ), Vector2( 931, -258 ), Vector2( 931, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Label:custom_constants/shadow_offset_y")
tracks/3/interp = 2
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0.5, 2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0, 6 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Label:custom_constants/shadow_offset_x")
tracks/4/interp = 2
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0.5, 2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0, 6 ]
}

[sub_resource type="Animation" id=1003]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:rect_position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 1347, -166 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../ColorRect:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Label:custom_constants/shadow_offset_y")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 6 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Label:custom_constants/shadow_offset_x")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 6 ]
}

[node name="Control" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
focus_neighbour_right = NodePath("MainPanel/MarginContainer/VBoxContainer/NewBtn")
focus_neighbour_bottom = NodePath("MainPanel/MarginContainer/VBoxContainer/NewBtn")
focus_next = NodePath("MainPanel/MarginContainer/VBoxContainer/NewBtn")
focus_mode = 2
theme = SubResource( 316 )
script = SubResource( 14 )

[node name="ColorRect2" type="ColorRect" parent="."]
material = SubResource( 1083 )
anchor_right = 1.0
anchor_bottom = 1.0

[node name="ColorRect" type="TextureRect" parent="."]
modulate = Color( 0, 0, 0, 1 )
anchor_right = 1.0
anchor_bottom = 1.0
size_flags_horizontal = 3
size_flags_vertical = 3
texture = SubResource( 63 )
expand = true

[node name="MarginContainer" type="MarginContainer" parent="."]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -573.0
margin_top = -166.0
margin_right = 407.0
margin_bottom = 118.0
custom_constants/margin_right = 50
custom_constants/margin_top = 50
__meta__ = {
"_edit_group_": true
}

[node name="Label" type="Label" parent="MarginContainer"]
margin_top = 63.0
margin_right = 930.0
margin_bottom = 271.0
custom_colors/font_color_shadow = Color( 0.152941, 0.152941, 0.152941, 1 )
custom_constants/shadow_offset_x = 6
custom_constants/shadow_offset_y = 6
custom_fonts/font = SubResource( 13 )
text = "NAMELESS"
align = 2
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="SceneHubPanel" type="PanelContainer" parent="."]
unique_name_in_owner = true
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -279.0
margin_top = -221.0
margin_right = 283.0
margin_bottom = 233.0
custom_styles/panel = SubResource( 56 )
script = SubResource( 84 )

[node name="VBoxContainer" type="VBoxContainer" parent="SceneHubPanel"]
margin_left = 10.0
margin_top = 10.0
margin_right = 552.0
margin_bottom = 444.0
custom_constants/separation = 18

[node name="SearchBar" type="LineEdit" parent="SceneHubPanel/VBoxContainer"]
margin_right = 542.0
margin_bottom = 52.0
custom_fonts/font = SubResource( 386 )
clear_button_enabled = true
placeholder_text = "Enter scene name..."

[node name="ScrollContainer" type="ScrollContainer" parent="SceneHubPanel/VBoxContainer"]
margin_top = 70.0
margin_right = 542.0
margin_bottom = 384.0
rect_min_size = Vector2( 320, 210 )
size_flags_vertical = 3

[node name="ItemList" type="ItemList" parent="SceneHubPanel/VBoxContainer/ScrollContainer"]
margin_right = 542.0
margin_bottom = 314.0
size_flags_horizontal = 3
size_flags_vertical = 3
custom_constants/vseparation = 20
custom_fonts/font = ExtResource( 2 )
items = [ "a", null, false, "b", null, true, "Item 2", null, false, "Item 3", null, false, "Item 4", null, false, "Item 5", null, false, "Item 6", null, false, "Item 7", null, false, "Item 8", null, false, "Item 9", null, false, "Item 10", null, false, "Item 11", null, false, "Item 12", null, false, "Item 13", null, false, "Item 14", null, false, "Item 15", null, false, "Item 16", null, false ]

[node name="HBoxContainer" type="HBoxContainer" parent="SceneHubPanel/VBoxContainer"]
margin_top = 402.0
margin_right = 542.0
margin_bottom = 434.0
alignment = 1

[node name="OptionButton" type="OptionButton" parent="SceneHubPanel/VBoxContainer/HBoxContainer"]
margin_top = 4.0
margin_right = 267.0
margin_bottom = 28.0
size_flags_horizontal = 3
size_flags_vertical = 4
custom_fonts/font = SubResource( 351 )

[node name="StartBtn" type="Button" parent="SceneHubPanel/VBoxContainer/HBoxContainer"]
margin_left = 458.0
margin_top = -1.0
margin_right = 542.0
margin_bottom = 31.5
rect_min_size = Vector2( 70, 0 )
size_flags_horizontal = 10
size_flags_vertical = 6
text = " start "
script = SubResource( 1038 )

[node name="Control" type="Control" parent="SceneHubPanel"]
margin_left = 10.0
margin_top = 10.0
margin_right = 552.0
margin_bottom = 444.0
mouse_filter = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AcceptDialog" type="WindowDialog" parent="SceneHubPanel/Control"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -277.0
margin_top = -130.0
margin_right = 277.0
margin_bottom = 130.0
window_title = "Error"
script = SubResource( 422 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="SceneHubPanel/Control/AcceptDialog"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = 5.0
custom_constants/separation = 11
alignment = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="SceneHubPanel/Control/AcceptDialog/VBoxContainer"]
margin_right = 554.0
margin_bottom = 45.0
text = "Unable to load the following maps:"
align = 1
valign = 1

[node name="ScrollContainer" type="ScrollContainer" parent="SceneHubPanel/Control/AcceptDialog/VBoxContainer"]
margin_top = 56.0
margin_right = 554.0
margin_bottom = 255.0
size_flags_vertical = 3
custom_styles/bg = SubResource( 421 )

[node name="ItemList" type="ItemList" parent="SceneHubPanel/Control/AcceptDialog/VBoxContainer/ScrollContainer"]
margin_left = 10.0
margin_right = 544.0
margin_bottom = 189.0
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="SavesPanel" type="PanelContainer" parent="."]
unique_name_in_owner = true
visible = false
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -279.0
margin_top = -221.0
margin_right = 283.0
margin_bottom = 233.0
custom_styles/panel = SubResource( 56 )
script = SubResource( 1073 )

[node name="VBoxContainer" type="VBoxContainer" parent="SavesPanel"]
margin_left = 10.0
margin_top = 10.0
margin_right = 552.0
margin_bottom = 444.0
custom_constants/separation = 18

[node name="ScrollContainer" type="ScrollContainer" parent="SavesPanel/VBoxContainer"]
margin_right = 542.0
margin_bottom = 384.0
rect_min_size = Vector2( 320, 210 )
size_flags_vertical = 3

[node name="ItemList" type="ItemList" parent="SavesPanel/VBoxContainer/ScrollContainer"]
margin_right = 542.0
margin_bottom = 384.0
size_flags_horizontal = 3
size_flags_vertical = 3
custom_constants/vseparation = 20
custom_fonts/font = ExtResource( 2 )
items = [ "a", null, false, "b", null, true, "Item 2", null, false, "Item 3", null, false, "Item 4", null, false, "Item 5", null, false, "Item 6", null, false, "Item 7", null, false, "Item 8", null, false, "Item 9", null, false, "Item 10", null, false, "Item 11", null, false, "Item 12", null, false, "Item 13", null, false, "Item 14", null, false, "Item 15", null, false, "Item 16", null, false ]

[node name="HBoxContainer" type="HBoxContainer" parent="SavesPanel/VBoxContainer"]
margin_top = 402.0
margin_right = 542.0
margin_bottom = 434.0
custom_constants/separation = 33
alignment = 1

[node name="StartSaveBtn" type="Button" parent="SavesPanel/VBoxContainer/HBoxContainer"]
unique_name_in_owner = true
margin_right = 80.0
margin_bottom = 32.5
rect_min_size = Vector2( 80, 0 )
text = "Start"

[node name="DeleteSaveBtn" type="Button" parent="SavesPanel/VBoxContainer/HBoxContainer"]
unique_name_in_owner = true
margin_left = 113.0
margin_right = 193.0
margin_bottom = 32.5
rect_min_size = Vector2( 80, 0 )
text = "Delete"

[node name="ReloadSavesBtn" type="Button" parent="SavesPanel/VBoxContainer/HBoxContainer"]
unique_name_in_owner = true
margin_left = 226.0
margin_right = 319.5
margin_bottom = 32.5
rect_min_size = Vector2( 80, 0 )
text = "Refresh"

[node name="OpenSavesDirBtn" type="Button" parent="SavesPanel/VBoxContainer/HBoxContainer"]
unique_name_in_owner = true
margin_left = 446.0
margin_right = 542.0
margin_bottom = 32.5
rect_min_size = Vector2( 80, 0 )
size_flags_horizontal = 10
text = "open dir"

[node name="Control" type="Control" parent="SavesPanel"]
margin_left = 10.0
margin_top = 10.0
margin_right = 552.0
margin_bottom = 444.0
mouse_filter = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AcceptDialog" type="WindowDialog" parent="SavesPanel/Control"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -277.0
margin_top = -130.0
margin_right = 277.0
margin_bottom = 130.0
window_title = "Error"
script = SubResource( 422 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="SavesPanel/Control/AcceptDialog"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = 5.0
custom_constants/separation = 11
alignment = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="SavesPanel/Control/AcceptDialog/VBoxContainer"]
margin_right = 554.0
margin_bottom = 33.0
text = "Unable to load the following maps:"
align = 1
valign = 1

[node name="ScrollContainer" type="ScrollContainer" parent="SavesPanel/Control/AcceptDialog/VBoxContainer"]
margin_top = 44.0
margin_right = 554.0
margin_bottom = 255.0
size_flags_vertical = 3
custom_styles/bg = SubResource( 421 )

[node name="ItemList" type="ItemList" parent="SavesPanel/Control/AcceptDialog/VBoxContainer/ScrollContainer"]
margin_left = 10.0
margin_right = 544.0
margin_bottom = 201.0
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="AboutPanel" type="PanelContainer" parent="."]
unique_name_in_owner = true
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -476.0
margin_top = -286.0
margin_right = 394.0
margin_bottom = 287.0
custom_styles/panel = SubResource( 10 )
script = SubResource( 85 )

[node name="VBoxContainer" type="VBoxContainer" parent="AboutPanel"]
margin_left = 4.0
margin_top = 4.0
margin_right = 866.0
margin_bottom = 579.0
grow_vertical = 2
alignment = 1

[node name="Label2" type="Label" parent="AboutPanel/VBoxContainer"]
margin_right = 862.0
margin_bottom = 146.0
size_flags_vertical = 1
custom_fonts/font = SubResource( 55 )
custom_styles/normal = SubResource( 1078 )
text = "So...what is this?"
align = 1
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="RichTextLabel" type="Label" parent="AboutPanel/VBoxContainer"]
margin_top = 154.0
margin_right = 862.0
margin_bottom = 323.5
size_flags_vertical = 1
custom_styles/normal = SubResource( 1078 )
text = "This is a mess of game mechanic tests and prototype levels. Ideally, it's the beginning of an FPS game. In practice, who knows if anything will ever come of this."
align = 1
valign = 1
autowrap = true

[node name="MarginContainer" type="MarginContainer" parent="AboutPanel/VBoxContainer"]
margin_top = 331.0
margin_right = 862.0
margin_bottom = 527.779
rect_min_size = Vector2( 0, 196.779 )
size_flags_vertical = 3
custom_constants/margin_right = 15
custom_constants/margin_left = 15
__meta__ = {
"_edit_group_": true
}

[node name="HBoxContainer" type="HBoxContainer" parent="AboutPanel/VBoxContainer/MarginContainer"]
margin_left = 15.0
margin_top = 15.0
margin_right = 847.0
margin_bottom = 181.0
size_flags_vertical = 4
custom_constants/separation = 38
alignment = 1

[node name="GridContainer" type="GridContainer" parent="AboutPanel/VBoxContainer/MarginContainer/HBoxContainer"]
margin_right = 444.045
margin_bottom = 166.0
rect_min_size = Vector2( 444.045, 0 )
theme = SubResource( 1076 )
custom_constants/hseparation = 76
columns = 2

[node name="Label" type="Label" parent="AboutPanel/VBoxContainer/MarginContainer/HBoxContainer/GridContainer"]
margin_right = 156.0
margin_bottom = 50.0
rect_min_size = Vector2( 0, 50 )
size_flags_horizontal = 3
custom_colors/font_color = Color( 0.639216, 0.639216, 0.639216, 1 )
text = "Author"

[node name="Label3" type="RichTextLabel" parent="AboutPanel/VBoxContainer/MarginContainer/HBoxContainer/GridContainer"]
margin_left = 232.0
margin_right = 444.0
margin_bottom = 50.0
size_flags_horizontal = 3
size_flags_vertical = 5
bbcode_enabled = true
bbcode_text = "[right][url=https://github.com/AndreaTerenz]AndreaTerenz[/url][/right]"
text = "AndreaTerenz"
script = SubResource( 1079 )

[node name="Label4" type="Label" parent="AboutPanel/VBoxContainer/MarginContainer/HBoxContainer/GridContainer"]
margin_top = 58.0
margin_right = 156.0
margin_bottom = 108.0
rect_min_size = Vector2( 0, 50 )
size_flags_horizontal = 3
custom_colors/font_color = Color( 0.639216, 0.639216, 0.639216, 1 )
text = "Game Version"

[node name="GameVersion" type="Label" parent="AboutPanel/VBoxContainer/MarginContainer/HBoxContainer/GridContainer"]
margin_left = 232.0
margin_top = 58.0
margin_right = 444.0
margin_bottom = 108.0
rect_min_size = Vector2( 0, 50 )
size_flags_horizontal = 3
text = "peepee.poopoo [alpha]"
align = 2
script = SubResource( 1080 )

[node name="Label2" type="Label" parent="AboutPanel/VBoxContainer/MarginContainer/HBoxContainer/GridContainer"]
margin_top = 116.0
margin_right = 156.0
margin_bottom = 166.0
rect_min_size = Vector2( 0, 50 )
size_flags_horizontal = 3
custom_colors/font_color = Color( 0.639216, 0.639216, 0.639216, 1 )
text = "engine version"

[node name="Engine Version2" type="Label" parent="AboutPanel/VBoxContainer/MarginContainer/HBoxContainer/GridContainer"]
margin_left = 232.0
margin_top = 116.0
margin_right = 444.0
margin_bottom = 166.0
rect_min_size = Vector2( 0, 50 )
size_flags_horizontal = 3
text = "Godot 3.5 rc8"
align = 2
script = SubResource( 474 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PanelContainer" type="PanelContainer" parent="AboutPanel/VBoxContainer/MarginContainer/HBoxContainer"]
margin_left = 482.0
margin_right = 832.0
margin_bottom = 166.0
size_flags_horizontal = 3
custom_styles/panel = SubResource( 1077 )

[node name="RichTextLabel" type="RichTextLabel" parent="AboutPanel/VBoxContainer/MarginContainer/HBoxContainer/PanelContainer"]
margin_right = 350.0
margin_bottom = 166.0
bbcode_enabled = true
bbcode_text = "[url=https://godotengine.org/][img=350x166]res://Assets/godot logos/logo_large_monochrome_dark.svg[/img][/url]"
scroll_active = false
script = SubResource( 1079 )

[node name="FeedbackBtn" type="LinkButton" parent="AboutPanel/VBoxContainer"]
margin_left = 374.0
margin_top = 535.0
margin_right = 488.0
margin_bottom = 575.0
rect_min_size = Vector2( 0, 40 )
size_flags_horizontal = 4
custom_fonts/font = SubResource( 1081 )
text = "Send Feedback"
script = SubResource( 1082 )

[node name="SettingsPanel" parent="." instance=ExtResource( 10 )]
unique_name_in_owner = true
visible = false

[node name="MainPanel" type="PanelContainer" parent="."]
unique_name_in_owner = true
anchor_bottom = 1.0
margin_right = 309.0
custom_styles/panel = SubResource( 931 )
__meta__ = {
"_edit_group_": true
}

[node name="ColorRect2" type="TextureRect" parent="MainPanel"]
modulate = Color( 0.486275, 0.486275, 0.486275, 1 )
material = SubResource( 61 )
margin_right = 289.0
margin_bottom = 1080.0
size_flags_horizontal = 3
size_flags_vertical = 3
texture = SubResource( 63 )
expand = true

[node name="MarginContainer" type="MarginContainer" parent="MainPanel"]
margin_right = 289.0
margin_bottom = 1080.0
custom_constants/margin_right = 25
custom_constants/margin_left = 25

[node name="VBoxContainer" type="VBoxContainer" parent="MainPanel/MarginContainer"]
margin_left = 25.0
margin_right = 264.0
margin_bottom = 1080.0
custom_constants/separation = 32
alignment = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="NewBtn" type="Button" parent="MainPanel/MarginContainer/VBoxContainer"]
margin_top = 396.0
margin_right = 239.0
margin_bottom = 428.5
focus_neighbour_top = NodePath("../QuitBtn")
focus_next = NodePath("../SettingsBtn")
focus_previous = NodePath("../QuitBtn")
text = "New"
script = ExtResource( 1 )

[node name="LoadBtn" type="Button" parent="MainPanel/MarginContainer/VBoxContainer"]
margin_top = 460.0
margin_right = 239.0
margin_bottom = 492.5
focus_neighbour_top = NodePath("../QuitBtn")
focus_next = NodePath("../SettingsBtn")
focus_previous = NodePath("../QuitBtn")
text = "Load"
script = ExtResource( 1 )

[node name="SettingsBtn" type="Button" parent="MainPanel/MarginContainer/VBoxContainer"]
margin_top = 524.0
margin_right = 239.0
margin_bottom = 556.5
focus_previous = NodePath("../NewBtn")
text = "Settings"
script = ExtResource( 1 )

[node name="AboutBtn" type="Button" parent="MainPanel/MarginContainer/VBoxContainer"]
margin_top = 588.0
margin_right = 239.0
margin_bottom = 620.5
focus_next = NodePath("../QuitBtn")
text = "About"
script = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="QuitBtn" type="Button" parent="MainPanel/MarginContainer/VBoxContainer"]
margin_top = 652.0
margin_right = 239.0
margin_bottom = 684.5
focus_neighbour_bottom = NodePath("../NewBtn")
focus_next = NodePath("../NewBtn")
focus_previous = NodePath("../AboutBtn")
text = "Quit"
script = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="."]
anchor_top = 1.0
anchor_bottom = 1.0
margin_left = 15.0
margin_top = -85.0
margin_right = 302.0
grow_vertical = 0
custom_constants/separation = 9
__meta__ = {
"_edit_group_": true
}

[node name="GameVersion" type="Label" parent="VBoxContainer"]
margin_top = 5.0
margin_right = 287.0
margin_bottom = 32.0
size_flags_vertical = 6
custom_colors/font_color = Color( 0.507834, 0.507834, 0.507834, 1 )
custom_fonts/font = SubResource( 54 )
text = "demo_1022 [alpha]"
valign = 1
script = SubResource( 1080 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Engine Version" type="Label" parent="VBoxContainer"]
margin_top = 52.0
margin_right = 287.0
margin_bottom = 79.0
size_flags_vertical = 6
custom_colors/font_color = Color( 0.507834, 0.507834, 0.507834, 1 )
custom_colors/font_outline_modulate = Color( 0, 0, 0, 1 )
custom_fonts/font = SubResource( 54 )
text = "Godot 3.X"
valign = 1
script = SubResource( 474 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="FeedbackDialog" type="WindowDialog" parent="."]
unique_name_in_owner = true
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -262.0
margin_top = -206.5
margin_right = 262.0
margin_bottom = 206.5
window_title = "send feedback"
script = SubResource( 1084 )

[node name="MarginContainer" type="MarginContainer" parent="FeedbackDialog"]
anchor_right = 1.0
anchor_bottom = 1.0
custom_constants/margin_right = 10
custom_constants/margin_top = 10
custom_constants/margin_left = 10
custom_constants/margin_bottom = 10

[node name="VBoxContainer" type="VBoxContainer" parent="FeedbackDialog/MarginContainer"]
margin_left = 10.0
margin_top = 10.0
margin_right = 514.0
margin_bottom = 403.0

[node name="CheckBox" type="CheckBox" parent="FeedbackDialog/MarginContainer/VBoxContainer"]
margin_right = 504.0
margin_bottom = 60.0
rect_min_size = Vector2( 0, 60 )
pressed = true
text = "include debug info about your system"

[node name="TextEdit" type="TextEdit" parent="FeedbackDialog/MarginContainer/VBoxContainer"]
margin_top = 68.0
margin_right = 504.0
margin_bottom = 325.0
size_flags_vertical = 3
wrap_enabled = true
caret_blink = true

[node name="HBoxContainer" type="HBoxContainer" parent="FeedbackDialog/MarginContainer/VBoxContainer"]
margin_top = 333.0
margin_right = 504.0
margin_bottom = 393.0
rect_min_size = Vector2( 0, 60 )
custom_constants/separation = 42
alignment = 1

[node name="CancelBtn" type="Button" parent="FeedbackDialog/MarginContainer/VBoxContainer/HBoxContainer"]
margin_left = 141.0
margin_top = 13.0
margin_right = 231.0
margin_bottom = 45.5
rect_min_size = Vector2( 90, 0 )
size_flags_vertical = 4
text = "cancel"

[node name="SendBtn" type="Button" parent="FeedbackDialog/MarginContainer/VBoxContainer/HBoxContainer"]
margin_left = 273.0
margin_top = 13.0
margin_right = 363.0
margin_bottom = 45.5
rect_min_size = Vector2( 90, 0 )
size_flags_vertical = 4
text = "send"

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
root_node = NodePath("../MarginContainer")
autoplay = "FadeIn"
anims/FadeIn = SubResource( 985 )
anims/RESET = SubResource( 1003 )

[node name="part_0_backdrop" parent="." instance=ExtResource( 4 )]

[connection signal="hide_visible_panels" from="." to="SceneHubPanel" method="_on_hide_visible_panels"]
[connection signal="hide_visible_panels" from="." to="SavesPanel" method="_on_hide_visible_panels"]
[connection signal="hide_visible_panels" from="." to="AboutPanel" method="_on_hide_visible_panels"]
[connection signal="hide_visible_panels" from="." to="SettingsPanel" method="_on_hide_visible_panels"]
[connection signal="text_changed" from="SceneHubPanel/VBoxContainer/SearchBar" to="SceneHubPanel" method="_on_search_text_changed"]
[connection signal="item_activated" from="SceneHubPanel/VBoxContainer/ScrollContainer/ItemList" to="SceneHubPanel" method="_on_item_activated"]
[connection signal="item_selected" from="SceneHubPanel/VBoxContainer/ScrollContainer/ItemList" to="SceneHubPanel" method="_on_item_selected"]
[connection signal="item_selected" from="SceneHubPanel/VBoxContainer/ScrollContainer/ItemList" to="SceneHubPanel/VBoxContainer/HBoxContainer/StartBtn" method="_on_scene_selected"]
[connection signal="item_selected" from="SceneHubPanel/VBoxContainer/HBoxContainer/OptionButton" to="SceneHubPanel" method="_on_directory_selected"]
[connection signal="item_selected" from="SceneHubPanel/VBoxContainer/HBoxContainer/OptionButton" to="SceneHubPanel/VBoxContainer/HBoxContainer/StartBtn" method="_on_category_selected"]
[connection signal="pressed" from="SceneHubPanel/VBoxContainer/HBoxContainer/StartBtn" to="SceneHubPanel" method="_on_StartBtn_pressed"]
[connection signal="about_to_show" from="SceneHubPanel/Control/AcceptDialog" to="SceneHubPanel/Control/AcceptDialog" method="_on_about_to_show"]
[connection signal="item_activated" from="SavesPanel/VBoxContainer/ScrollContainer/ItemList" to="SavesPanel" method="_on_item_activated"]
[connection signal="item_selected" from="SavesPanel/VBoxContainer/ScrollContainer/ItemList" to="SavesPanel" method="_on_item_selected"]
[connection signal="pressed" from="SavesPanel/VBoxContainer/HBoxContainer/StartSaveBtn" to="SavesPanel" method="_on_StartSave_pressed"]
[connection signal="pressed" from="SavesPanel/VBoxContainer/HBoxContainer/DeleteSaveBtn" to="SavesPanel" method="_on_DeleteSave_pressed"]
[connection signal="pressed" from="SavesPanel/VBoxContainer/HBoxContainer/ReloadSavesBtn" to="SavesPanel" method="_on_ReloadSaves_pressed"]
[connection signal="pressed" from="SavesPanel/VBoxContainer/HBoxContainer/OpenSavesDirBtn" to="SavesPanel" method="_on_OpenSavesDir_pressed"]
[connection signal="about_to_show" from="SavesPanel/Control/AcceptDialog" to="SavesPanel/Control/AcceptDialog" method="_on_about_to_show"]
[connection signal="pressed" from="MainPanel/MarginContainer/VBoxContainer/NewBtn" to="." method="_on_NewBtn_pressed"]
[connection signal="pressed" from="MainPanel/MarginContainer/VBoxContainer/LoadBtn" to="." method="_on_LoadBtn_pressed"]
[connection signal="pressed" from="MainPanel/MarginContainer/VBoxContainer/SettingsBtn" to="." method="_on_SettingsBtn_pressed"]
[connection signal="pressed" from="MainPanel/MarginContainer/VBoxContainer/AboutBtn" to="." method="_on_AboutBtn_pressed"]
[connection signal="pressed" from="MainPanel/MarginContainer/VBoxContainer/QuitBtn" to="." method="_on_QuitBtn_pressed"]
[connection signal="about_to_show" from="FeedbackDialog" to="FeedbackDialog" method="_on_about_to_show"]
[connection signal="pressed" from="FeedbackDialog/MarginContainer/VBoxContainer/HBoxContainer/CancelBtn" to="FeedbackDialog" method="_on_CancelBtn_pressed"]
[connection signal="pressed" from="FeedbackDialog/MarginContainer/VBoxContainer/HBoxContainer/SendBtn" to="FeedbackDialog" method="_on_SendBtn_pressed"]
