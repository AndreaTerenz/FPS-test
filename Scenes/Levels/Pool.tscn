[gd_scene load_steps=25 format=2]

[ext_resource path="res://Scripts/EnvElements/Volumes/EnvVolume.gd" type="Script" id=1]
[ext_resource path="res://Assets/Skyboxes/iceflats.tga" type="Texture" id=2]
[ext_resource path="res://Materials/Grids/grid_light.tres" type="Material" id=3]
[ext_resource path="res://Scenes/Player.tscn" type="PackedScene" id=4]
[ext_resource path="res://Scenes/Elements/KillZone.tscn" type="PackedScene" id=5]
[ext_resource path="res://Materials/Grids/grid_red.tres" type="Material" id=6]
[ext_resource path="res://Materials/Grids/grid_green.tres" type="Material" id=7]
[ext_resource path="res://Materials/Grids/grid_yellow.tres" type="Material" id=8]
[ext_resource path="res://Materials/water.tres" type="Material" id=9]
[ext_resource path="res://Materials/Grids/grid_dark.tres" type="Material" id=10]

[sub_resource type="CylinderMesh" id=19]
bottom_radius = 2.875
height = 3.187

[sub_resource type="BoxShape" id=20]
extents = Vector3( 6, 9, 8 )

[sub_resource type="PlaneMesh" id=1]
size = Vector2( 12, 18 )
subdivide_width = 128
subdivide_depth = 128

[sub_resource type="PlaneMesh" id=22]
size = Vector2( 12, 12 )
subdivide_width = 128
subdivide_depth = 128

[sub_resource type="Shader" id=28]
code = "shader_type spatial;
render_mode cull_disabled;

uniform float noise_scale : hint_range(.5, 80.0) = 1.0;
uniform float time_mult : hint_range(0.0, 6.0) = 4.0;
uniform float fresnel_scale : hint_range(0.0, 2.0) = .05;
uniform float refraction_dampen : hint_range(0.1, 10.0) = 3.0;
uniform bool realistic_murkiness = true;
uniform float murkiness : hint_range(.0, 1.) = .2;

uniform bool enable_edge = true;
uniform float edge_scale : hint_range(0.1, 2.0) = 1.0;
uniform bool smooth_edge = true;
uniform float edge_harshness : hint_range(0.0, 1.0) = 0.5;

uniform sampler2D noise_a;
uniform sampler2D noise_b;
uniform sampler2D noise_normal : hint_normal;

uniform vec4 tint : hint_color = vec4(.13, .29, .57, .61);
uniform vec4 edge_tint : hint_color = vec4(1.0);

bool compare(float v, float target, float delta) {
	return abs(v - target) <= delta/2.0;
}

float remap_range(float value, float InputA, float InputB, float OutputA, float OutputB) {
    return(value - InputA) / (InputB - InputA) * (OutputB - OutputA) + OutputA;
}

float smooth_compare(float val, float ref, float delta, float harhsness, bool reverse)
{
	float diff = abs(val-ref);
	float output = remap_range(diff, harhsness/2.0, delta/2.0, 0.0, 1.0);
	
	return (reverse) ? 1.0 - output : output;
}

float rim(float depth) {
	depth = remap_range(depth, 0.0, 1.0, -1.0, 1.0);
	
	float near = .1;
	float far = 25.0;
	
	return (near * far) / (far + depth * (near - far));
}

float noise_sum(vec2 uv, float time) {
	vec3 na_sample = texture(noise_a, uv + time).rgb;
	vec3 nb_sample = texture(noise_b, uv - time).rgb;
	
	return remap_range(na_sample.r + nb_sample.r, 0., 2., -1., 1.);
}

float height(vec2 position, float time) {
	vec2 offset = .1 * vec2(cos(time), sin(time));
	
	return noise_sum((position + offset) / noise_scale, time);
}

vec3 edge_color(sampler2D depth_txt, vec2 uv_pos, vec4 fragcoord) {
	if (enable_edge) {
		float z_depth = (texture(depth_txt, uv_pos).x);
		float z_pos = (fragcoord.z);
		float z_diff = rim(z_depth) - rim(z_pos);
		
		float s = edge_scale / 10.0;
		float edge_mask = step(s, z_diff);
		if (smooth_edge) {
			float h = remap_range(edge_harshness, 0.0, 1.0, -1.0, 1.0);
			edge_mask = smoothstep(s * h, s, z_diff);
		}
		
		return mix(edge_tint.rgb, tint.rgb, edge_mask);
	}
	
	return tint.rgb;
}

float get_clearness(vec2 uv_pos, sampler2D depth_txt, mat4 proj_mat, float vert_z) {
	float depth = texture(depth_txt, uv_pos).r;
		
	depth = remap_range(depth, 0.0, 1.0, -1.0, 1.0);
	depth = proj_mat[3][2] / (depth + proj_mat[2][2]);
	depth += vert_z; //z < 0
	depth = exp(-depth * murkiness);

	return 1.0 - clamp(depth, 0.0, 1.0);
}

vec2 refraction_vec(vec2 uv_pos, float time) {
	float refraction = noise_sum(uv_pos, time / (time_mult * 5.0)) / (refraction_dampen * 15.0);
	return vec2(refraction);
}

void vertex() {
	float noise_x = remap_range(VERTEX.x, -1.0, 1.0, 0.0, 1.0);
	float noise_y = remap_range(VERTEX.z, -1.0, 1.0, 0.0, 1.0);
	
	VERTEX.y += height(vec2(noise_x, noise_y), TIME * time_mult / 10.);
}

float fresnel(vec3 normal, vec3 view) {
	return sqrt(1.0 - dot(normal, view));
}

void fragment() {
	float time = TIME * time_mult / 5.;
	float fr = fresnel(NORMAL, VIEW);
	
	vec2 refract_uv = SCREEN_UV + refraction_vec(UV, time);
	vec3 edge_color = edge_color(DEPTH_TEXTURE, SCREEN_UV, FRAGCOORD);
	float alpha = (!realistic_murkiness) ? tint.a : get_clearness(refract_uv, DEPTH_TEXTURE, PROJECTION_MATRIX, VERTEX.z);
	
	vec4 back = texture(SCREEN_TEXTURE, refract_uv);

	vec3 color = mix(back.rgb, tint.rgb, alpha);
	color = max(color, edge_color);
	
	METALLIC = 0.0;
	RIM = .1;
	NORMALMAP = texture(noise_normal, (UV + time)).rgb;
	ROUGHNESS = .01 * (1.0 - fr);
	ALBEDO.rgb = color + (fresnel_scale * fr);
	SPECULAR = 1.0;
	TRANSMISSION = tint.rgb;
}"

[sub_resource type="OpenSimplexNoise" id=13]
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=14]
seamless = true
noise = SubResource( 13 )

[sub_resource type="OpenSimplexNoise" id=15]

[sub_resource type="NoiseTexture" id=16]
seamless = true
noise = SubResource( 15 )

[sub_resource type="OpenSimplexNoise" id=17]

[sub_resource type="NoiseTexture" id=18]
seamless = true
as_normalmap = true
bump_strength = 1.0
noise = SubResource( 17 )

[sub_resource type="ShaderMaterial" id=29]
shader = SubResource( 28 )
shader_param/noise_scale = 64.896
shader_param/time_mult = 0.146
shader_param/fresnel_scale = 0.05
shader_param/refraction_dampen = 5.29
shader_param/realistic_murkiness = true
shader_param/murkiness = 0.5
shader_param/enable_edge = true
shader_param/edge_scale = 1.0
shader_param/smooth_edge = true
shader_param/edge_harshness = 0.5
shader_param/tint = Color( 0.0588235, 0.380392, 0.0156863, 1 )
shader_param/edge_tint = Color( 1, 1, 1, 1 )
shader_param/noise_a = SubResource( 14 )
shader_param/noise_b = SubResource( 16 )
shader_param/noise_normal = SubResource( 18 )

[sub_resource type="PanoramaSky" id=2]
panorama = ExtResource( 2 )

[sub_resource type="Environment" id=21]
background_mode = 2
background_sky = SubResource( 2 )
background_sky_orientation = Basis( -1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1 )
background_energy = 0.26
ambient_light_color = Color( 0.54902, 0.835294, 0.835294, 1 )
ambient_light_energy = 0.62
fog_color = Color( 0.224, 0.32, 0.264, 1 )
fog_depth_end = 237.6
fog_depth_curve = 1.51572
fog_transmit_enabled = true
fog_height_min = 3.0
fog_height_max = -4.0
fog_height_curve = 3.4822
tonemap_mode = 3
tonemap_exposure = 0.58
tonemap_white = 0.33
auto_exposure_min_luma = 0.0
ssao_quality = 2
dof_blur_far_distance = 64.94
dof_blur_far_transition = 8192.0
dof_blur_far_quality = 2
glow_bloom = 1.0
glow_bicubic_upscale = true
adjustment_brightness = 0.86
adjustment_contrast = 1.35
adjustment_saturation = 0.36

[node name="Spatial" type="Spatial"]

[node name="Env" type="Spatial" parent="."]

[node name="KillZone" parent="Env" instance=ExtResource( 5 )]
transform = Transform( 60.3277, 0, 0, 0, 1, 0, 0, 0, 60.3277, 0, -42.2348, 0 )

[node name="CSGCombiner" type="CSGCombiner" parent="Env"]
use_collision = true
collision_layer = 4
collision_mask = 817

[node name="CSGBox" type="CSGBox" parent="Env/CSGCombiner"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 3.05264, -13.5194, 0 )
width = 44.906
height = 20.0
depth = 30.0
material = ExtResource( 3 )

[node name="CSGBox3" type="CSGBox" parent="Env/CSGCombiner"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -5.74584, -5.5 )
operation = 2
width = 6.0
height = 8.0
depth = 3.0
material = ExtResource( 10 )

[node name="CSGBox4" type="CSGBox" parent="Env/CSGCombiner"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -3.74584, -7.5 )
operation = 2
width = 6.0
height = 8.0
depth = 3.0
material = ExtResource( 10 )

[node name="CSGBox5" type="CSGBox" parent="Env/CSGCombiner"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1.74584, -9.5 )
operation = 2
width = 6.0
height = 8.0
depth = 3.0
material = ExtResource( 10 )

[node name="Hole" type="CSGBox" parent="Env/CSGCombiner"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -1.74584, 0 )
operation = 2
width = 10.0
height = 41.371
depth = 10.0
material = ExtResource( 10 )

[node name="Hole2" type="CSGBox" parent="Env/CSGCombiner"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 13, -1.74584, 0 )
operation = 2
width = 10.0
height = 16.693
depth = 10.0
material = ExtResource( 10 )

[node name="CSGSphere" type="CSGSphere" parent="Env/CSGCombiner"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.358587, -5.86005, -1.69359 )
visible = false
radial_segments = 24
rings = 12
material = ExtResource( 6 )

[node name="CSGSphere3" type="CSGSphere" parent="Env/CSGCombiner"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -1.95542, -13.86, 0.675066 )
visible = false
radius = 2.858
radial_segments = 24
rings = 12
material = ExtResource( 8 )

[node name="CSGSphere2" type="CSGSphere" parent="Env/CSGCombiner"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 1.93337, -4.81862, 2.11725 )
radial_segments = 24
rings = 12
material = ExtResource( 6 )

[node name="CSGSphere4" type="CSGSphere" parent="Env/CSGCombiner"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 12.5476, -4.26333, 1.89115 )
radial_segments = 24
rings = 12
material = ExtResource( 6 )

[node name="MeshInstance2" type="MeshInstance" parent="Env"]
transform = Transform( 0.0955852, 0.8784, 0, -0.17568, 0.477925, 0, 0, 0, 0.2, -1.80236, -4.27572, -2.66212 )
mesh = SubResource( 19 )
skeleton = NodePath("../CSGCombiner")
material/0 = ExtResource( 7 )

[node name="MeshInstance3" type="MeshInstance" parent="Env"]
transform = Transform( 0.0955852, 0.8784, 0, -0.17568, 0.477925, 0, 0, 0, 0.2, 13.822, -4.27572, -2.66212 )
mesh = SubResource( 19 )
skeleton = NodePath("../CSGCombiner")
material/0 = ExtResource( 7 )

[node name="SpotLight" type="SpotLight" parent="Env"]
transform = Transform( -8.74228e-09, 0.154687, -0.126775, 0, 0.633877, 0.773434, 0.2, 6.76157e-09, -5.54153e-09, -1.27305, 2.4854, -0.733805 )
visible = false
light_energy = 2.083
shadow_enabled = true
spot_range = 22.9606
spot_angle = 30.5677

[node name="Water" type="Area" parent="Env"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -4.14091, -1.58923 )
collision_layer = 1028
script = ExtResource( 1 )

[node name="CollisionShape" type="CollisionShape" parent="Env/Water"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -9, 0 )
shape = SubResource( 20 )

[node name="Water Surf" type="MeshInstance" parent="Env/Water"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -1.0914 )
mesh = SubResource( 1 )
skeleton = NodePath("../..")
material/0 = ExtResource( 9 )

[node name="Water Surf2" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 13, -4.07336, 0 )
mesh = SubResource( 22 )
skeleton = NodePath("../Env")
material/0 = SubResource( 29 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 21 )

[node name="Player" parent="." instance=ExtResource( 4 )]
transform = Transform( -4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, -10.2625, -0.401917, 4.09291 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 0.969177, 0.117495, -0.216541, -0.0285522, 0.926594, 0.374979, 0.244704, -0.357238, 0.901388, 0, 0, 0 )
