[gd_resource type="VisualShader" load_steps=8 format=2]

[sub_resource type="VisualShaderNodeFresnel" id=28]

[sub_resource type="VisualShaderNodeScalarOp" id=29]
output_port_for_preview = 0
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeVec3Constant" id=31]
constant = Vector3( 1, 0, 0 )

[sub_resource type="VisualShaderNodeExpression" id=32]
size = Vector2( 388, 404 )
expression = "float diff = abs(val-0.5);

float delta1 = (delta/2.0-harhsness/2.0);
float delta2 = (1.0-0.0);

float scale = delta2/delta1;
float offset = -harhsness/2.0*scale + 0.0;
mask = diff*scale + offset;"

[sub_resource type="VisualShaderNodeScalarConstant" id=33]
constant = -0.603

[sub_resource type="VisualShaderNodeScalarConstant" id=34]
constant = 0.559

[sub_resource type="VisualShaderNodeInput" id=35]
input_name = "normal"

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;




void vertex() {
// Output:0

}

void fragment() {
// Vector:5
	vec3 n_out5p0 = vec3(1.000000, 0.000000, 0.000000);

// Input:9
	vec3 n_out9p0 = NORMAL;

// Fresnel:2
	float n_in2p3 = 1.00000;
	float n_out2p0 = pow(1.0 - clamp(dot(n_out9p0, VIEW), 0.0, 1.0), n_in2p3);

// Scalar:7
	float n_out7p0 = -0.603000;

// Scalar:8
	float n_out8p0 = 0.559000;

// Expression:6
	float n_out6p0;
	n_out6p0 = 0.0;
	{
		float diff = abs(n_out2p0-0.5);
		
		float delta1 = (n_out8p0/2.0-n_out7p0/2.0);
		float delta2 = (1.0-0.0);
		
		float scale = delta2/delta1;
		float offset = -n_out7p0/2.0*scale + 0.0;
		n_out6p0 = diff*scale + offset;
	}

// Output:0
	ALBEDO = n_out5p0;
	ALPHA = n_out6p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -686.023, 84.7216 )
nodes/fragment/0/position = Vector2( 660, 140 )
nodes/fragment/2/node = SubResource( 28 )
nodes/fragment/2/position = Vector2( -580, 220 )
nodes/fragment/3/node = SubResource( 29 )
nodes/fragment/3/position = Vector2( 460, 220 )
nodes/fragment/5/node = SubResource( 31 )
nodes/fragment/5/position = Vector2( -60, 60 )
nodes/fragment/6/node = SubResource( 32 )
nodes/fragment/6/position = Vector2( -160, 240 )
nodes/fragment/6/size = Vector2( 388, 404 )
nodes/fragment/6/input_ports = "0,0,val;1,0,harhsness;2,0,delta;"
nodes/fragment/6/output_ports = "0,0,mask;"
nodes/fragment/6/expression = "float diff = abs(val-0.5);

float delta1 = (delta/2.0-harhsness/2.0);
float delta2 = (1.0-0.0);

float scale = delta2/delta1;
float offset = -harhsness/2.0*scale + 0.0;
mask = diff*scale + offset;"
nodes/fragment/7/node = SubResource( 33 )
nodes/fragment/7/position = Vector2( -520, 380 )
nodes/fragment/8/node = SubResource( 34 )
nodes/fragment/8/position = Vector2( -520, 460 )
nodes/fragment/9/node = SubResource( 35 )
nodes/fragment/9/position = Vector2( -840, 220 )
nodes/fragment/connections = PoolIntArray( 5, 0, 0, 0, 7, 0, 6, 1, 8, 0, 6, 2, 2, 0, 6, 0, 6, 0, 3, 1, 9, 0, 2, 0, 6, 0, 0, 1 )
