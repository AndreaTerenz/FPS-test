[gd_scene load_steps=11 format=2]

[ext_resource path="res://Assets/Models/gltf test/gate2.glb" type="PackedScene" id=1]
[ext_resource path="res://Assets/Audio/SFX/forcefield.ogg" type="AudioStream" id=2]

[sub_resource type="GDScript" id=7]
script/source = "extends Spatial

export var starts_on := true
onready var barrier := $\"Gate 2/Cube004\"

func _ready() -> void:
	if starts_on:
		barrier.turn_on()
	else:
		barrier.turn_off()

func turn_on():
	barrier.turn_on()
	
func turn_off():
	barrier.turn_off()
"

[sub_resource type="Shader" id=2]
code = "shader_type spatial;
render_mode cull_disabled, unshaded;

uniform vec4 tint : hint_color = vec4(.16, .2, .38, 1.0);
uniform vec4 edge_tint : hint_color = vec4(1.0);
uniform sampler2D noise_txt;

uniform bool enable_edge = true;
uniform float edge_scale : hint_range(0.1, 2.0) = 1.0;
uniform bool smooth_edge = true;
uniform float edge_harshness : hint_range(0.0, 1.0) = 0.5;

uniform float screen_abr_amnt = 1.0;

uniform float white_noise_strength = .05;

//get a scalar random value from a 3d value
float rand(vec3 value){
    //make value smaller to avoid artefacts
    vec3 smallValue = sin(value);
    //get scalar value from 3d vector
    float random = dot(smallValue, vec3(12.9898, 78.233, 37.719));
    //make value more random by making it bigger and then taking teh factional part
    random = fract(sin(random) * 143758.5453);
    return random;
}

//get a scalar random value from a 3d value
float rand3dTo1d(vec3 value, vec3 dotDir){
    //make value smaller to avoid artefacts
    vec3 smallValue = sin(value);
    //get scalar value from 3d vector
    float random = dot(smallValue, dotDir);
    //make value more random by making it bigger and then taking teh factional part
    random = fract(sin(random) * 143758.5453);
    return random;
}

//get a 3d random value from a 3d value
vec3 rand3dTo3d(vec3 value){
    return vec3(
        rand3dTo1d(value, vec3(12.989, 78.233, 37.719)),
        rand3dTo1d(value, vec3(39.346, 11.135, 83.155)),
        rand3dTo1d(value, vec3(73.156, 52.235, 09.151))
    );
}

float remap_range(float value, float InputA, float InputB, float OutputA, float OutputB) {
    return(value - InputA) / (InputB - InputA) * (OutputB - OutputA) + OutputA;
}

float rim(float depth) {
	depth = remap_range(depth, 0.0, 1.0, -1.0, 1.0);
	
	float near = .1;
	float far = 25.0;
	
	return (near * far) / (far + depth * (near - far));
}

vec4 edge_color(sampler2D depth_txt, vec2 uv_pos, vec4 fragcoord, vec4 main_tint) {
	float z_depth = (texture(depth_txt, uv_pos).x);
	float z_pos = (fragcoord.z);
	float z_diff = rim(z_depth) - rim(z_pos);
	
	float s = edge_scale / 10.0;
	float edge_mask = step(s, z_diff);
	if (smooth_edge) {
		float h = remap_range(edge_harshness, 0.0, 1.0, -1.0, 1.0);
		edge_mask = smoothstep(s * h, s, z_diff);
	}
	
	return mix(edge_tint, main_tint, edge_mask);
}

void fragment() {
	vec3 back = texture(SCREEN_TEXTURE, SCREEN_UV).rgb;
	float depth = 1.0 - texture(DEPTH_TEXTURE, SCREEN_UV).r;
	
	float noise = texture(noise_txt, vec2(TIME)).r;
	
	float adjusted_screen_abr_amnt = noise / 100.0;
	vec4 t;
	t.r = texture(SCREEN_TEXTURE, vec2(SCREEN_UV.x + adjusted_screen_abr_amnt, SCREEN_UV.y)).r;
	t.g = texture(SCREEN_TEXTURE, SCREEN_UV).g;
	t.b = texture(SCREEN_TEXTURE, vec2(SCREEN_UV.x - adjusted_screen_abr_amnt, SCREEN_UV.y)).b;
	
	vec4 edge = edge_color(DEPTH_TEXTURE, SCREEN_UV, FRAGCOORD, tint + t);
	
	ALPHA = edge.a;
	ALBEDO = edge.rgb;
	//EMISSION = tint.rgb;
	
	float white_noise = rand3dTo3d(floor(VERTEX*20.) + .002*TIME).r*white_noise_strength;
	ALBEDO += white_noise;
}"

[sub_resource type="OpenSimplexNoise" id=5]

[sub_resource type="NoiseTexture" id=6]
seamless = true
noise = SubResource( 5 )

[sub_resource type="ShaderMaterial" id=1]
shader = SubResource( 2 )
shader_param/tint = Color( 0, 0.164706, 0.419608, 0.568627 )
shader_param/edge_tint = Color( 0.290196, 0.905882, 0.960784, 1 )
shader_param/enable_edge = true
shader_param/edge_scale = 2.0
shader_param/smooth_edge = true
shader_param/edge_harshness = 0.706
shader_param/screen_abr_amnt = 1.0
shader_param/white_noise_strength = 0.05
shader_param/noise_txt = SubResource( 6 )

[sub_resource type="GDScript" id=8]
script/source = "extends MeshInstance

onready var barrier := $StaticBody/CollisionShape
onready var sound := $AudioStreamPlayer3D

func turn_on():
	visible = true
	barrier.disabled = false
	sound.playing = true
	
func turn_off():
	visible = false
	barrier.disabled = true
	sound.playing = false
"

[sub_resource type="ConcavePolygonShape" id=4]
data = PoolVector3Array( 0, -3.7846, -0.6997, 0, 3.1922, 7.3989, 0, 3.1922, 1.1759, 0, -3.7846, -0.6997, 0, -3.7846, 7.3989, 0, 3.1922, 7.3989, 0, -3.7846, 15.4974, 0, 3.1922, 7.3989, 0, -3.7846, 7.3989, 0, -3.7846, 15.4974, 0, 3.1922, 13.6218, 0, 3.1922, 7.3989 )

[sub_resource type="ConcavePolygonShape" id=3]
data = PoolVector3Array( -1, 3.6438, -7.3571, -1, 6.9768, -6.8575, -1, 6.9768, -6.4611, -1, 3.6438, -7.3571, -1, 3.6438, -7.7536, -1, 6.9768, -6.8575, -0.9835, 6.9768, -6.0646, -1.7614, 6.9768, -6.4611, -1, 6.9768, -6.4611, -0.9835, 6.9768, -6.0646, -1.7614, 6.9768, -6.0646, -1.7614, 6.9768, -6.4611, 0.3062, 0, -8.3366, 0.9835, 0, -7.9402, 1, 0, -8.3366, 0.3062, 0, -8.3366, 0.127, 0, -7.9402, 0.9835, 0, -7.9402, 1, 6.9768, -6.8575, 1, 0, -8.3366, 1, 6.9768, -6.4611, 1, 6.9768, -6.8575, 1, 0, -8.7427, 1, 0, -8.3366, -1, 3.6438, -7.7536, -0.1267, 6.9768, -6.8575, -1, 6.9768, -6.8575, -0.1267, 6.9768, -6.8575, 1, 6.9768, -6.8575, 0.127, 6.9768, -6.8575, 1, 6.9768, -6.8575, 0.3333, 0, -8.7607, 1, 0, -8.7427, 1, 6.9768, -6.8575, 0.3333, 1.2506, -8.3694, 0.3333, 0, -8.7607, -1, 3.6438, -7.7536, 1, 6.9768, -6.8575, -0.1267, 6.9768, -6.8575, -0.3333, 0, -8.7607, -1, 3.6438, -7.7536, -1, 0, -8.7427, 1, 6.9768, -6.8575, -0.3333, 1.2506, -8.3694, 0.3333, 1.2506, -8.3694, -0.3333, 1.2506, -8.3694, -1, 3.6438, -7.7536, -0.3333, 0, -8.7607, 1, 6.9768, -6.8575, -1, 3.6438, -7.7536, -0.3333, 1.2506, -8.3694, -0.3333, 0, -8.7607, -0.3333, 1.2506, -9.096, -0.3333, 1.2506, -8.3694, -0.3333, 0, -8.7607, -0.3333, 0, -10.5733, -0.3333, 1.2506, -9.096, 0.3333, 1.2506, -8.3694, 0.3333, 0, -10.5733, 0.3333, 0, -8.7607, 0.3333, 1.2506, -8.3694, 0.3333, 1.2506, -9.096, 0.3333, 0, -10.5733, 0.3333, 0, -8.7607, -0.3333, 0, -10.5733, -0.3333, 0, -8.7607, 0.3333, 0, -8.7607, 0.3333, 0, -10.5733, -0.3333, 0, -10.5733, -1, 0, -8.3366, -1, 3.6438, -7.7536, -1, 3.6438, -7.3571, -1, 0, -8.3366, -1, 0, -8.7427, -1, 3.6438, -7.7536, 1, 6.9768, -6.4611, 1.7614, 0, -8.3366, 1.7614, 6.9768, -6.4611, 1, 6.9768, -6.4611, 1, 0, -8.3366, 1.7614, 0, -8.3366, -1.7614, 6.9768, -6.4611, -1, 3.6438, -7.3571, -1, 6.9768, -6.4611, -1, 3.6438, -7.3571, -1.7614, 0, -8.3366, -1, 0, -8.3366, -1.7614, 3.6438, -7.3571, -1, 3.6438, -7.3571, -1.7614, 6.9768, -6.4611, -1, 3.6438, -7.3571, -1.7614, 3.6438, -7.3571, -1.7614, 0, -8.3366, 1.7614, 6.9768, -6.4611, 1.7614, 0, -7.9402, 1.7614, 6.9768, -6.0646, 1.7614, 6.9768, -6.4611, 1.7614, 0, -8.3366, 1.7614, 0, -7.9402, -0.3333, 0, -10.5733, 0.3333, 1.2506, -9.096, -0.3333, 1.2506, -9.096, -0.3333, 0, -10.5733, 0.3333, 0, -10.5733, 0.3333, 1.2506, -9.096, -1.7614, 0, -7.9402, -1.7614, 3.6438, -7.3571, -1.7614, 3.6438, -6.9606, -1.7614, 0, -7.9402, -1.7614, 0, -8.3366, -1.7614, 3.6438, -7.3571, 1, 6.9768, -6.4611, 1.7614, 6.9768, -6.0646, 0.9835, 6.9768, -6.0646, 1, 6.9768, -6.4611, 1.7614, 6.9768, -6.4611, 1.7614, 6.9768, -6.0646, -1.7614, 3.6438, -6.9606, -1.7614, 6.9768, -6.4611, -1.7614, 6.9768, -6.0646, -1.7614, 3.6438, -6.9606, -1.7614, 3.6438, -7.3571, -1.7614, 6.9768, -6.4611, -0.3333, 1.2506, -8.3694, 0.3333, 1.2506, -9.096, 0.3333, 1.2506, -8.3694, -0.3333, 1.2506, -8.3694, -0.3333, 1.2506, -9.096, 0.3333, 1.2506, -9.096, -1, 0, -8.3366, -0.127, 0, -7.9402, -0.3062, 0, -8.3366, -1, 0, -8.3366, -0.9835, 0, -7.9402, -0.127, 0, -7.9402, 0.127, 6.9768, -6.223, -0.1267, 6.9768, -6.8575, 0.127, 6.9768, -6.8575, -0.1267, 6.9768, -6.8575, 0, 6.9768, -6.223, -0.127, 6.9768, -6.223, -0.1267, 6.9768, -6.8575, 0.127, 6.9768, -6.223, 0, 6.9768, -6.223, -0.1267, 6.9768, -6.8575, -1, 6.9768, -6.4611, -1, 6.9768, -6.8575, -1, 6.9768, -6.4611, -0.127, 6.9768, -6.0646, -0.9835, 6.9768, -6.0646, -0.127, 6.9768, -6.223, -1, 6.9768, -6.4611, -0.1267, 6.9768, -6.8575, -1, 6.9768, -6.4611, -0.127, 6.9768, -6.223, -0.127, 6.9768, -6.0646, -0.3062, 0, -8.3366, 0.127, 0, -7.9402, 0.3062, 0, -8.3366, -0.3062, 0, -8.3366, -0.127, 0, -7.9402, 0.127, 0, -7.9402, -1, 0, -8.7427, -0.3062, 0, -8.3366, -0.3333, 0, -8.7607, -1, 0, -8.7427, -1, 0, -8.3366, -0.3062, 0, -8.3366, 1, 6.9768, -6.4611, 0.127, 6.9768, -6.8575, 1, 6.9768, -6.8575, 0.127, 6.9768, -6.223, 0.9835, 6.9768, -6.0646, 0.127, 6.9768, -6.0646, 1, 6.9768, -6.4611, 0.127, 6.9768, -6.223, 0.127, 6.9768, -6.8575, 0.127, 6.9768, -6.223, 1, 6.9768, -6.4611, 0.9835, 6.9768, -6.0646, -1, 0, -8.3366, -1.7614, 0, -7.9402, -0.9835, 0, -7.9402, -1, 0, -8.3366, -1.7614, 0, -8.3366, -1.7614, 0, -7.9402, 0.3333, 0, -8.7607, 1, 0, -8.3366, 1, 0, -8.7427, 0.3333, 0, -8.7607, 0.3062, 0, -8.3366, 1, 0, -8.3366, 0.9835, 0, -7.9402, 1.7614, 0, -8.3366, 1, 0, -8.3366, 0.9835, 0, -7.9402, 1.7614, 0, -7.9402, 1.7614, 0, -8.3366, -0.3333, 0, -8.7607, 0.3062, 0, -8.3366, 0.3333, 0, -8.7607, -0.3333, 0, -8.7607, -0.3062, 0, -8.3366, 0.3062, 0, -8.3366, -0.127, 0, -8.0986, 0.127, 0, -7.9402, -0.127, 0, -7.9402, 0.127, 0, -7.9402, 0, 0, -8.0986, 0.127, 0, -8.0986, 0.127, 0, -7.9402, -0.127, 0, -8.0986, 0, 0, -8.0986, -1, 3.6438, 7.3571, -1, 6.9768, 6.8576, -1, 3.6438, 7.7536, -1, 3.6438, 7.3571, -1, 6.9768, 6.4611, -1, 6.9768, 6.8576, -0.9835, 6.9768, 6.0646, -1.7614, 6.9768, 6.4611, -1.7614, 6.9768, 6.0646, -0.9835, 6.9768, 6.0646, -1, 6.9768, 6.4611, -1.7614, 6.9768, 6.4611, 0.3062, 0, 8.3366, 0.9835, 0, 7.9402, 0.127, 0, 7.9402, 0.3062, 0, 8.3366, 1, 0, 8.3366, 0.9835, 0, 7.9402, 1, 6.9768, 6.8576, 1, 0, 8.3366, 1, 0, 8.7428, 1, 6.9768, 6.8576, 1, 6.9768, 6.4611, 1, 0, 8.3366, -0.1267, 6.9768, 6.8576, -1, 3.6438, 7.7536, -1, 6.9768, 6.8576, -1, 3.6438, 7.7536, -0.3333, 0, 8.7607, -1, 0, 8.7428, -1, 3.6438, 7.7536, -0.3333, 1.2506, 8.3694, -0.3333, 0, 8.7607, 0.127, 6.9768, 6.8576, -1, 3.6438, 7.7536, -0.1267, 6.9768, 6.8576, 1, 0, 8.7428, 0.127, 6.9768, 6.8576, 1, 6.9768, 6.8576, 0.3333, 1.2506, 8.3694, 1, 0, 8.7428, 0.3333, 0, 8.7607, -1, 3.6438, 7.7536, 0.3333, 1.2506, 8.3694, -0.3333, 1.2506, 8.3694, 0.3333, 1.2506, 8.3694, 0.127, 6.9768, 6.8576, 1, 0, 8.7428, -1, 3.6438, 7.7536, 0.127, 6.9768, 6.8576, 0.3333, 1.2506, 8.3694, -0.3333, 0, 8.7607, -0.3333, 1.2506, 9.096, -0.3333, 0, 10.5733, -0.3333, 0, 8.7607, -0.3333, 1.2506, 8.3694, -0.3333, 1.2506, 9.096, 0.3333, 1.2506, 8.3694, 0.3333, 0, 10.5733, 0.3333, 1.2506, 9.096, 0.3333, 1.2506, 8.3694, 0.3333, 0, 8.7607, 0.3333, 0, 10.5733, 0.3333, 0, 8.7607, -0.3333, 0, 10.5733, 0.3333, 0, 10.5733, 0.3333, 0, 8.7607, -0.3333, 0, 8.7607, -0.3333, 0, 10.5733, -1, 0, 8.3366, -1, 3.6438, 7.7536, -1, 0, 8.7428, -1, 0, 8.3366, -1, 3.6438, 7.3571, -1, 3.6438, 7.7536, 1, 6.9768, 6.4611, 1.7614, 0, 8.3366, 1, 0, 8.3366, 1, 6.9768, 6.4611, 1.7614, 6.9768, 6.4611, 1.7614, 0, 8.3366, -1, 3.6438, 7.3571, -1.7614, 6.9768, 6.4611, -1, 6.9768, 6.4611, -1.7614, 3.6438, 7.3571, -1, 0, 8.3366, -1.7614, 0, 8.3366, -1, 3.6438, 7.3571, -1.7614, 3.6438, 7.3571, -1.7614, 6.9768, 6.4611, -1.7614, 3.6438, 7.3571, -1, 3.6438, 7.3571, -1, 0, 8.3366, 1.7614, 6.9768, 6.4611, 1.7614, 0, 7.9402, 1.7614, 0, 8.3366, 1.7614, 6.9768, 6.4611, 1.7614, 6.9768, 6.0646, 1.7614, 0, 7.9402, -0.3333, 0, 10.5733, 0.3333, 1.2506, 9.096, 0.3333, 0, 10.5733, -0.3333, 0, 10.5733, -0.3333, 1.2506, 9.096, 0.3333, 1.2506, 9.096, -1.7614, 0, 7.9402, -1.7614, 3.6438, 7.3571, -1.7614, 0, 8.3366, -1.7614, 0, 7.9402, -1.7614, 3.6438, 6.9606, -1.7614, 3.6438, 7.3571, 1, 6.9768, 6.4611, 1.7614, 6.9768, 6.0646, 1.7614, 6.9768, 6.4611, 1, 6.9768, 6.4611, 0.9835, 6.9768, 6.0646, 1.7614, 6.9768, 6.0646, -1.7614, 3.6438, 6.9606, -1.7614, 6.9768, 6.4611, -1.7614, 3.6438, 7.3571, -1.7614, 3.6438, 6.9606, -1.7614, 6.9768, 6.0646, -1.7614, 6.9768, 6.4611, -0.3333, 1.2506, 8.3694, 0.3333, 1.2506, 9.096, -0.3333, 1.2506, 9.096, -0.3333, 1.2506, 8.3694, 0.3333, 1.2506, 8.3694, 0.3333, 1.2506, 9.096, -1, 0, 8.3366, -0.127, 0, 7.9402, -0.9835, 0, 7.9402, -1, 0, 8.3366, -0.3062, 0, 8.3366, -0.127, 0, 7.9402, -0.1267, 6.9768, 6.8576, 0.127, 6.9768, 6.223, 0.127, 6.9768, 6.8576, 0, 6.9768, 6.223, -0.1267, 6.9768, 6.8576, -0.127, 6.9768, 6.223, 0.127, 6.9768, 6.223, -0.1267, 6.9768, 6.8576, 0, 6.9768, 6.223, -1, 6.9768, 6.4611, -0.1267, 6.9768, 6.8576, -1, 6.9768, 6.8576, -0.127, 6.9768, 6.223, -0.9835, 6.9768, 6.0646, -0.127, 6.9768, 6.0646, -1, 6.9768, 6.4611, -0.127, 6.9768, 6.223, -0.1267, 6.9768, 6.8576, -0.127, 6.9768, 6.223, -1, 6.9768, 6.4611, -0.9835, 6.9768, 6.0646, -0.3062, 0, 8.3366, 0.127, 0, 7.9402, -0.127, 0, 7.9402, -0.3062, 0, 8.3366, 0.3062, 0, 8.3366, 0.127, 0, 7.9402, -1, 0, 8.7428, -0.3062, 0, 8.3366, -1, 0, 8.3366, -1, 0, 8.7428, -0.3333, 0, 8.7607, -0.3062, 0, 8.3366, 0.127, 6.9768, 6.8576, 1, 6.9768, 6.4611, 1, 6.9768, 6.8576, 1, 6.9768, 6.4611, 0.127, 6.9768, 6.0646, 0.9835, 6.9768, 6.0646, 0.127, 6.9768, 6.223, 1, 6.9768, 6.4611, 0.127, 6.9768, 6.8576, 1, 6.9768, 6.4611, 0.127, 6.9768, 6.223, 0.127, 6.9768, 6.0646, -1, 0, 8.3366, -1.7614, 0, 7.9402, -1.7614, 0, 8.3366, -1, 0, 8.3366, -0.9835, 0, 7.9402, -1.7614, 0, 7.9402, 0.3333, 0, 8.7607, 1, 0, 8.3366, 0.3062, 0, 8.3366, 0.3333, 0, 8.7607, 1, 0, 8.7428, 1, 0, 8.3366, 0.9835, 0, 7.9402, 1.7614, 0, 8.3366, 1.7614, 0, 7.9402, 0.9835, 0, 7.9402, 1, 0, 8.3366, 1.7614, 0, 8.3366, -0.3333, 0, 8.7607, 0.3062, 0, 8.3366, -0.3062, 0, 8.3366, -0.3333, 0, 8.7607, 0.3333, 0, 8.7607, 0.3062, 0, 8.3366, 0.127, 0, 7.9402, -0.127, 0, 8.0986, -0.127, 0, 7.9402, 0, 0, 8.0986, 0.127, 0, 7.9402, 0.127, 0, 8.0986, -0.127, 0, 8.0986, 0.127, 0, 7.9402, 0, 0, 8.0986, -0.127, 6.9768, -6.0646, -0.127, 0, -8.0986, -0.127, 0, -7.9402, -0.127, 6.9768, -6.0646, -0.127, 6.9768, -6.223, -0.127, 0, -8.0986, 0.9835, 6.9768, -6.0646, 0.127, 0, -7.9402, 0.127, 6.9768, -6.0646, 0.9835, 0, -7.9402, 1.7614, 6.9768, -6.0646, 1.7614, 0, -7.9402, 0.9835, 6.9768, -6.0646, 0.9835, 0, -7.9402, 0.127, 0, -7.9402, 0.9835, 0, -7.9402, 0.9835, 6.9768, -6.0646, 1.7614, 6.9768, -6.0646, -0.127, 6.9768, -6.0646, -1.7614, 6.9768, -6.0646, -0.9835, 6.9768, -6.0646, -1.7614, 6.9768, -6.0646, -1.7614, 0, -7.9402, -1.7614, 3.6438, -6.9606, -0.9835, 0, -7.9402, -0.127, 6.9768, -6.0646, -0.127, 0, -7.9402, -1.7614, 6.9768, -6.0646, -0.9835, 0, -7.9402, -1.7614, 0, -7.9402, -1.7614, 6.9768, -6.0646, -0.127, 6.9768, -6.0646, -0.9835, 0, -7.9402, 0, 6.9768, -6.223, -0.127, 0, -8.0986, -0.127, 6.9768, -6.223, 0, 6.9768, -6.223, 0, 0, -8.0986, -0.127, 0, -8.0986, 0.127, 6.9768, -6.0646, 0.127, 0, -8.0986, 0.127, 6.9768, -6.223, 0.127, 6.9768, -6.0646, 0.127, 0, -7.9402, 0.127, 0, -8.0986, 0.127, 0, -8.0986, 0, 6.9768, -6.223, 0.127, 6.9768, -6.223, 0.127, 0, -8.0986, 0, 0, -8.0986, 0, 6.9768, -6.223, -0.127, 6.9768, 6.0646, -0.127, 0, 8.0986, -0.127, 6.9768, 6.223, -0.127, 6.9768, 6.0646, -0.127, 0, 7.9402, -0.127, 0, 8.0986, 0.127, 0, 7.9402, 0.9835, 6.9768, 6.0646, 0.127, 6.9768, 6.0646, 0.9835, 6.9768, 6.0646, 1.7614, 0, 7.9402, 1.7614, 6.9768, 6.0646, 0.9835, 0, 7.9402, 0.9835, 6.9768, 6.0646, 0.127, 0, 7.9402, 0.9835, 6.9768, 6.0646, 0.9835, 0, 7.9402, 1.7614, 0, 7.9402, -1.7614, 6.9768, 6.0646, -0.127, 6.9768, 6.0646, -0.9835, 6.9768, 6.0646, -0.127, 6.9768, 6.0646, -0.9835, 0, 7.9402, -0.127, 0, 7.9402, -0.9835, 0, 7.9402, -1.7614, 3.6438, 6.9606, -1.7614, 0, 7.9402, -1.7614, 3.6438, 6.9606, -0.127, 6.9768, 6.0646, -1.7614, 6.9768, 6.0646, -0.127, 6.9768, 6.0646, -1.7614, 3.6438, 6.9606, -0.9835, 0, 7.9402, 0, 6.9768, 6.223, -0.127, 0, 8.0986, 0, 0, 8.0986, 0, 6.9768, 6.223, -0.127, 6.9768, 6.223, -0.127, 0, 8.0986, 0.127, 6.9768, 6.0646, 0.127, 0, 8.0986, 0.127, 0, 7.9402, 0.127, 6.9768, 6.0646, 0.127, 6.9768, 6.223, 0.127, 0, 8.0986, 0.127, 0, 8.0986, 0, 6.9768, 6.223, 0, 0, 8.0986, 0.127, 0, 8.0986, 0.127, 6.9768, 6.223, 0, 6.9768, 6.223 )

[node name="gate2" instance=ExtResource( 1 )]
script = SubResource( 7 )

[node name="Gate 2" parent="." index="0"]
use_in_baked_light = true

[node name="Cube004" parent="Gate 2" index="0"]
visible = false
material/0 = SubResource( 1 )
script = SubResource( 8 )

[node name="StaticBody" type="StaticBody" parent="Gate 2/Cube004" index="0"]

[node name="CollisionShape" type="CollisionShape" parent="Gate 2/Cube004/StaticBody" index="0"]
shape = SubResource( 4 )

[node name="AudioStreamPlayer3D" type="AudioStreamPlayer3D" parent="Gate 2/Cube004" index="1"]
transform = Transform( 1.43934, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 7.37526 )
stream = ExtResource( 2 )
unit_db = 12.951
autoplay = true
bus = "Hum"

[node name="OmniLight" type="OmniLight" parent="Gate 2/Cube004" index="2"]
transform = Transform( 1.43934, 0, 0, 0, 1, 0, 0, 0, 1, 3.63798e-12, 1.90735e-06, 7.37526 )
layers = 3
light_color = Color( 0.121569, 0.831373, 0.996078, 1 )
omni_range = 6.27581

[node name="StaticBody" type="StaticBody" parent="Gate 2" index="1"]

[node name="CollisionShape" type="CollisionShape" parent="Gate 2/StaticBody" index="0"]
shape = SubResource( 3 )
